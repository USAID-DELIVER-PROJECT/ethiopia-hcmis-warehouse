
// Generated by MyGeneration Version # (1.3.0.9)

using System;
using System.Data;
using DAL;

namespace BLL
{
	public class InstitutionType : _InstitutionType
	{

        public static class Constants
        {
            public static int OTHERS;
            public static int REGION;
            public static int ZONE;
            public static int WOREDA;
            public static int HUB;
            public static int CLINIC;
            public static int ADMINISTRATIVE_UNIT;
            public static int HOSPITAL;
            public static int HEALTH_CENTER;
            public static int PHARMACY;
            public static int RURAL_DRUG_VENDOR;
            public static int DRUG_STORE;
            public static int CENTER;
            public static int SUPPLIER;
            public static int RESEARCH_CENTER;
            public static int INDIVIDUALS;
            public static int ESCROW;
            public static int IMPORT_AND_WHOLE_SALE;
            public static int REGIONAL_LAB;
            public static int MACHINE;
            public static int DIAGNOSTIC_LABORATORY;
        }

        public InstitutionType()
		{

		
		}
        /// <summary>
        /// Gets the receiving unit type by region and number RU.
        /// </summary>
        /// <param name="WoredaID">The woreda ID.</param>
        /// <param name="OwnershipID">The ownership ID.</param>
        /// <returns></returns>
        public static DataTable GetReceivingUnitTypeByRegionAndNumberRU(int WoredaID,int OwnershipID)
        {
            InstitutionType RUType = new InstitutionType();
//            string query =
//                string.Format(@"Select rt.ID,rt.Name,rt.Name+ ' (' + CAST(COUNT(ru.ID) as varchar) + ')' as Count from  Institution ru Join InstitutionType rt  on rt.ID = ru.RUType
//                                        WHERE ru.Woreda= {0} and Ownership ={1} and ru.RUType <> {2}
//                                        Group by rt.ID,rt.Name
//                                        Union
//                                        Select rt.ID,rt.Name,rt.Name +'(0)' Count from InstitutionType rt
//                                            where rt.ID <> {2} and rt.ID  Not In (
//                                        Select Distinct ru.RUType from  Institution ru  WHERE ru.Woreda= {0} and Ownership ={1})", WoredaID, OwnershipID,Constants.HUB);
            //The above query string is commented because it filters out the hubs assuming that the hub to hub transfer is supposed to handle the hubs.  Therefore, it's commented until we make sure the hub to hub transfer is working perfectly as it should
            var query = HCMIS.Repository.Queries.InstitutionType.SelectGetReceivingUnitTypeByRegionAndNumberRU(WoredaID, OwnershipID);


            RUType.LoadFromRawSql(query);
            return RUType.DataTable;
        }

	    /// <summary>
        /// Gets the receiving unit type by region and number RU.
        /// </summary>
        /// <param name="WoredaID">The woreda ID.</param>
        /// <param name="storeID">The store ID.</param>
        /// <param name="hasBeenIssuedTo">if set to <c>true</c> [has been issued to].</param>
        /// <returns></returns>
        public static DataTable GetReceivingUnitTypeByRegionAndNumberRU(int WoredaID,int storeID, bool hasBeenIssuedTo)
        {
            InstitutionType RUType = new InstitutionType();
            //            string query =
            //                string.Format(@"Select rt.ID,rt.Name,rt.Name+ ' (' + CAST(COUNT(ru.ID) as varchar) + ')' as Count from  Institution ru Join InstitutionType rt  on rt.ID = ru.RUType
            //                                        WHERE ru.Woreda= {0} and Ownership ={1} and ru.RUType <> {2}
            //                                        Group by rt.ID,rt.Name
            //                                        Union
            //                                        Select rt.ID,rt.Name,rt.Name +'(0)' Count from InstitutionType rt
            //                                            where rt.ID <> {2} and rt.ID  Not In (
            //                                        Select Distinct ru.RUType from  Institution ru  WHERE ru.Woreda= {0} and Ownership ={1})", WoredaID, OwnershipID,Constants.HUB);
            //The above query string is commented because it filters out the hubs assuming that the hub to hub transfer is supposed to handle the hubs.  Therefore, it's commented until we make sure the hub to hub transfer is working perfectly as it should
            string query="";
            if (hasBeenIssuedTo)
            {
                 query=
                    HCMIS.Repository.Queries.InstitutionType.SelectGetReceivingUnitTypeByRegionAndNumberRUByStore(WoredaID, storeID);

            }
            RUType.LoadFromRawSql(query);
            return RUType.DataTable;
        }
	}
}
