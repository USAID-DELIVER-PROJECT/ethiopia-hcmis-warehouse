
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using DAL;

namespace BLL
{
	///<summary>
	/// Item supplier
	///</summary>
	public class ItemSupplier : _ItemSupplier
	{
	    ///<summary>
	    /// Gets all supplier for item
	    ///</summary>
	    ///<param name="itemId"></param>
	    ///<returns></returns>
	    public DataTable GetSupplierByItem(int itemId)
        {
            this.FlushData();
            this.Where.WhereClauseReset();
            this.Where.ItemID.Value = itemId;
            this.Query.Load();
            return this.DataTable;
        }

        public DataTable GetSuppliersAndMarkThoseUsed(int itemId)
        {
            this.FlushData();
            var query = HCMIS.Repository.Queries.ItemSupplier.SelectGetSuppliersAndMarkThoseUsed(itemId);
            this.LoadFromRawSql(query);
            return this.DataTable;
        }

	    /// <summary>
        /// Deletes all suppliers for an item
        /// </summary>
        /// <param name="itemId">The item id.</param>
        public void DeleteAllSupForItem(int itemId)
        {
            this.FlushData();
            this.Where.WhereClauseReset();
            this.Where.ItemID.Value = itemId;
            this.Query.Load();
            foreach(DataRowView dv in this.DataTable.DefaultView)
            {
                this.LoadByPrimaryKey(Convert.ToInt32(dv["ID"]));
                this.MarkAsDeleted();
                this.Save();
            }
        }

        /// <summary>
        /// Checks if supplier is already set for an item
        /// </summary>
        /// <param name="itemId">The item id.</param>
        /// <param name="supplierId">The supplier id.</param>
        /// <returns></returns>
        public bool CheckIfExist(int itemId, int supplierId)
        {
            var query = HCMIS.Repository.Queries.ItemSupplier.SelectCheckIfExist(itemId, supplierId);
            this.FlushData();
            this.LoadFromRawSql(query);
            return this.DataTable.Rows.Count > 0;
        }
	}
}
