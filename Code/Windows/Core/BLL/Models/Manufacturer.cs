
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using DAL;

namespace BLL
{
    ///<summary>
    /// Manufacturer Logic
    ///</summary>
    public class Manufacturer : _Manufacturer
    {

        /// <summary>
        /// Gets list of manufacturers that are not already set for an item
        /// this is displayed when an item manufacturer is about to be set
        /// </summary>
        /// <param name="itemId"></param>
        /// <returns></returns>
        public DataTable GetNewManufacturersFor(int itemId)
        {
            String query = HCMIS.Repository.Queries.Manufacturer.SelectGetNewManufacturersFor(itemId);
            this.LoadFromRawSql(query);
            return this.DataTable;
        }



        /// <summary>
        /// Loads all manufacturers for an item
        /// </summary>
        /// <param name="itemId">The item id.</param>
        public void LoadForItem(int itemId)
        {
            String query = HCMIS.Repository.Queries.Manufacturer.SelectLoadForItem(itemId);
            this.LoadFromRawSql(query);
        }

      
        /// <summary>
        /// Loads all manufacturers for an item
        /// </summary>
        /// <param name="itemId">The item id.</param>
        /// <param name="storeID">The store ID.</param>
        /// <param name="unitID">The unit ID.</param>
        /// <param name="withBalanceOnly">if set to <c>true</c> [with balance only].</param>
        public void LoadForItem(int itemId, int storeID, int unitID, bool withBalanceOnly)
        {
            String query;
            if (!withBalanceOnly)
                LoadForItem(itemId);
            else
            {
                query = HCMIS.Repository.Queries.Manufacturer.SelectLoadForItem(itemId, storeID, unitID);
                this.LoadFromRawSql(query);
            }
        }

       

        /// <summary>
        /// Loads all manufacturers
        /// This is an overload just to do the sorting
        /// </summary>
        public new void LoadAll()
        {
            this.LoadFromRawSql(HCMIS.Repository.Queries.Manufacturer.SelectLoadAll());
        }

       

        /// <summary>
        /// Gets the name of manufacturer
        /// </summary>
        /// <param name="manufacturerId">The manufacturer id.</param>
        /// <returns></returns>
        public static string GetName(int manufacturerId)
        {
            Manufacturer mfs = new Manufacturer();
            mfs.LoadByPrimaryKey(manufacturerId);
            return mfs.Name;
        }




        /// <summary>
        /// Gets all.
        /// </summary>
        /// <returns></returns>
        public static DataTable GetAll()
        {
            Manufacturer manufacturers = new Manufacturer();
            manufacturers.LoadAll();
            return manufacturers.DataTable;
        }
    }


}
