
// Generated by MyGeneration Version # (1.3.0.3)

using System.Data;
using DAL;

namespace BLL
{
    /// <summary>
    ///  Zone Logic
    /// </summary>
	public class Zone : _Zone
	{
        /// <summary>
        /// Returns list of zones in region
        /// </summary>
        /// <param name="regionId">The region id.</param>
        /// <returns></returns>
	    public static Zone GetZoneByRegion(int regionId)
        {
            Zone zone = new Zone();
            zone.FlushData();
            zone.Where.WhereClauseReset();
            zone.Where.RegionId.Value = regionId;
            zone.Query.Load();
            return zone;
        }

        /// <summary>
        /// Gets the zone by region and number RU.
        /// </summary>
        /// <param name="regionId">The region id.</param>
        /// <returns></returns>
        public static DataTable GetZoneByRegionAndNumberRU(int regionId)
        {
            Zone zones = new Zone();
            var query = HCMIS.Repository.Queries.Zone.SelectGetZoneByRegionAndNumberRU(regionId);
            Institution institution = new Institution();
            zones.LoadFromRawSql(query);
            return zones.DataTable;
        }

        /// <summary>
        /// Gets the zone by region and number Receiving Units.
        /// </summary>
        /// <param name="regionId">The region id.</param>
        /// <param name="storeID">The store ID.</param>
        /// <param name="issuedTo">if set to <c>true</c> [issued to].</param>
        /// <returns></returns>
        public static DataTable GetZoneByRegionAndNumberRU(int regionId,int storeID, bool issuedTo)
        {
            Zone zones = new Zone();
            var query = HCMIS.Repository.Queries.Zone.SelectGetZoneByRegionAndNumberRU(regionId, storeID);
            Institution institution = new Institution();
            zones.LoadFromRawSql(query);
            return zones.DataTable;
        }
	}
}
