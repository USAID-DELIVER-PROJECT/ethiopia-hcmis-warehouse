
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using DAL;
using System.Data;

namespace BLL
{
    public class Warehouse : _Warehouse
	{
		public Warehouse()
		{
		
		}

        /// <summary>
        /// Gets the warehouse with cluster.
        /// </summary>
        /// <param name="userID">The user ID.</param>
        /// <returns></returns>
        public static DataView GetWarehouseWithCluster(int userID)
        {
            string query =
            HCMIS.Repository.Queries.Warehouse.SelectGetWarehouseWithCluster(userID);
            BLL.Warehouse phStore = new Warehouse();
            phStore.LoadFromRawSql(query);
            return phStore.DefaultView;
        }

      

        public static DataView getActiveWarehouseWithCluster(int userID)
        {
            string query =
                HCMIS.Repository.Queries.Warehouse.SelectgetActiveWarehouseWithCluster(userID);
            BLL.Warehouse phStore = new Warehouse();
            phStore.LoadFromRawSql(query);
            return phStore.DefaultView;
        }

      

        /// <summary>
        /// Loads the users clusters.
        /// </summary>
        /// <param name="userID">The user ID.</param>
        public void LoadUsersClusters(int userID)
        {
            string query = HCMIS.Repository.Queries.Warehouse.SelectLoadUsersClusters(userID);
            this.LoadFromRawSql(query);
        }

      

        /// <summary>
        /// Loads the users clusters containing item.
        /// </summary>
        /// <param name="userID">The user ID.</param>
        /// <param name="itemID">The item ID.</param>
        /// <param name="unitID">The unit ID.</param>
        /// <param name="activityID">The activity ID.</param>
        public void LoadUsersClustersContainingItem(int userID, int itemID, int unitID, int activityID)
        {
            string query = HCMIS.Repository.Queries.Warehouse.SelectLoadUsersClustersContainingItem(userID, itemID, unitID, activityID);
            this.LoadFromRawSql(query);
        }


        public static DataTable GetWarehouseStatus()
        {
            var warehouse = new BLL.Warehouse();
            string query =
                HCMIS.Repository.Queries.Warehouse.SelectGetWarehouseStatus();
            warehouse.LoadFromRawSql(query);
            return warehouse.DataTable;
        }

      

        public void UpdateWarehouseStatusbyCluster(int clusterId, bool IsActive)
        {
            var warehouse = new BLL.Warehouse();
            string query =
                HCMIS.Repository.Queries.Warehouse.UpdateUpdateWarehouseStatusbyCluster(clusterId, IsActive);
            warehouse.LoadFromRawSql(query);
            
        }
	}
}
