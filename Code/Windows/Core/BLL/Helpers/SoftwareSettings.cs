
// Generated by MyGeneration Version # (1.3.0.9)

using System;
using DAL;
using System.Data;

namespace BLL
{
    public class SoftwareSettings : _SoftwareSettings
    {

        public SoftwareSettings()
        {

        }

        /// <summary>
        /// Gets all settings.
        /// </summary>
        /// <returns></returns>
        public static DataTable GetAllSettings()
        {
            SoftwareSettings softwareSetting = new SoftwareSettings();
            softwareSetting.LoadAll();
            return softwareSetting.DataTable;
        }

        public DataTable GetValue(string settingName)
        {
            var query = string.Format("Select * From SoftwareSettings where Name='{0}'", settingName);
            this.LoadFromRawSql(query);
            return this.DataTable;
        }

        public bool LoadValue(string settingName)
        {
            // check if it is found in the dictionary.
            this.FlushData();
            this.Where.Name.Value = settingName;
            this.Query.Load();
            return (RowCount > 0);
        }


        /// <summary>
        /// Sets the value.
        /// </summary>
        /// <param name="settingName">Name of the setting.</param>
        /// <param name="value">The value.</param>
        public static void SetValue(string settingName, string value)
        {
            SoftwareSettings settings = new SoftwareSettings();
            settings.Where.Name.Value = settingName;
            settings.Query.Load();
            if (settings.RowCount > 0)
            {
                settings.Value = value;
                settings.Save();
            }
            else
            {
                settings.FlushData();
                settings.AddNew();
                settings.Name = settingName;
                settings.Value = value;
                settings.Save();
            }
        }




    }
}
