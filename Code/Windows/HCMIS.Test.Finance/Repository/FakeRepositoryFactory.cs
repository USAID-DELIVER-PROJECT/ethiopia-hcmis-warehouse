//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCMIS.Test.Finance.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using EntityFramework.Patterns;
    using HCMIS.Concrete.Models;
    using HCMIS.Concrete.Repository;

    public partial class FakeRepositoryFactory : IRepositoryFactory
    {

        public FakeRepositoryFactory()
        {

        }



        private IRepository<ABC> _ABCs = null;

        public IRepository<ABC> ABCs
        {
            get
            {
                if (_ABCs == null)
                {
                    _ABCs = new FakeRepository<ABC>();
                }
                return _ABCs;
            }
        }



        private IRepository<Balance> _Balances = null;

        public IRepository<Balance> Balances
        {
            get
            {
                if (_Balances == null)
                {
                    _Balances = new FakeRepository<Balance>();
                }
                return _Balances;
            }
        }



        private IRepository<Category> _Categories = null;

        public IRepository<Category> Categories
        {
            get
            {
                if (_Categories == null)
                {
                    _Categories = new FakeRepository<Category>();
                }
                return _Categories;
            }
        }



        private IRepository<ChangeLog> _ChangeLogs = null;

        public IRepository<ChangeLog> ChangeLogs
        {
            get
            {
                if (_ChangeLogs == null)
                {
                    _ChangeLogs = new FakeRepository<ChangeLog>();
                }
                return _ChangeLogs;
            }
        }



        private IRepository<Cluster> _Clusters = null;

        public IRepository<Cluster> Clusters
        {
            get
            {
                if (_Clusters == null)
                {
                    _Clusters = new FakeRepository<Cluster>();
                }
                return _Clusters;
            }
        }





        private IRepository<DirectoryUpdate> _DirectoryUpdates = null;

        public IRepository<DirectoryUpdate> DirectoryUpdates
        {
            get
            {
                if (_DirectoryUpdates == null)
                {
                    _DirectoryUpdates = new FakeRepository<DirectoryUpdate>();
                }
                return _DirectoryUpdates;
            }
        }



        private IRepository<DirectoryUpdateStatu> _DirectoryUpdateStatus = null;

        public IRepository<DirectoryUpdateStatu> DirectoryUpdateStatus
        {
            get
            {
                if (_DirectoryUpdateStatus == null)
                {
                    _DirectoryUpdateStatus = new FakeRepository<DirectoryUpdateStatu>();
                }
                return _DirectoryUpdateStatus;
            }
        }



        private IRepository<Disposal> _Disposals = null;

        public IRepository<Disposal> Disposals
        {
            get
            {
                if (_Disposals == null)
                {
                    _Disposals = new FakeRepository<Disposal>();
                }
                return _Disposals;
            }
        }



        private IRepository<DisposalReason> _DisposalReasons = null;

        public IRepository<DisposalReason> DisposalReasons
        {
            get
            {
                if (_DisposalReasons == null)
                {
                    _DisposalReasons = new FakeRepository<DisposalReason>();
                }
                return _DisposalReasons;
            }
        }



        private IRepository<DosageForm> _DosageForms = null;

        public IRepository<DosageForm> DosageForms
        {
            get
            {
                if (_DosageForms == null)
                {
                    _DosageForms = new FakeRepository<DosageForm>();
                }
                return _DosageForms;
            }
        }



        private IRepository<ErrorLog> _ErrorLogs = null;

        public IRepository<ErrorLog> ErrorLogs
        {
            get
            {
                if (_ErrorLogs == null)
                {
                    _ErrorLogs = new FakeRepository<ErrorLog>();
                }
                return _ErrorLogs;
            }
        }



        private IRepository<Exchange> _Exchanges = null;

        public IRepository<Exchange> Exchanges
        {
            get
            {
                if (_Exchanges == null)
                {
                    _Exchanges = new FakeRepository<Exchange>();
                }
                return _Exchanges;
            }
        }



        private IRepository<ExchangeType> _ExchangeTypes = null;

        public IRepository<ExchangeType> ExchangeTypes
        {
            get
            {
                if (_ExchangeTypes == null)
                {
                    _ExchangeTypes = new FakeRepository<ExchangeType>();
                }
                return _ExchangeTypes;
            }
        }






        private IRepository<GeneralInfo> _GeneralInfoes = null;

        public IRepository<GeneralInfo> GeneralInfoes
        {
            get
            {
                if (_GeneralInfoes == null)
                {
                    _GeneralInfoes = new FakeRepository<GeneralInfo>();
                }
                return _GeneralInfoes;
            }
        }




        private IRepository<HalfPalletLocation> _HalfPalletLocations = null;

        public IRepository<HalfPalletLocation> HalfPalletLocations
        {
            get
            {
                if (_HalfPalletLocations == null)
                {
                    _HalfPalletLocations = new FakeRepository<HalfPalletLocation>();
                }
                return _HalfPalletLocations;
            }
        }



        private IRepository<InternalTransfer> _InternalTransfers = null;

        public IRepository<InternalTransfer> InternalTransfers
        {
            get
            {
                if (_InternalTransfers == null)
                {
                    _InternalTransfers = new FakeRepository<InternalTransfer>();
                }
                return _InternalTransfers;
            }
        }



        private IRepository<IssueDoc> _IssueDocs = null;

        public IRepository<IssueDoc> IssueDocs
        {
            get
            {
                if (_IssueDocs == null)
                {
                    _IssueDocs = new FakeRepository<IssueDoc>();
                }
                return _IssueDocs;
            }
        }



        private IRepository<IssueDocDeleted> _IssueDocDeleteds = null;

        public IRepository<IssueDocDeleted> IssueDocDeleteds
        {
            get
            {
                if (_IssueDocDeleteds == null)
                {
                    _IssueDocDeleteds = new FakeRepository<IssueDocDeleted>();
                }
                return _IssueDocDeleteds;
            }
        }



        private IRepository<ItemManufacturer> _ItemManufacturers = null;

        public IRepository<ItemManufacturer> ItemManufacturers
        {
            get
            {
                if (_ItemManufacturers == null)
                {
                    _ItemManufacturers = new FakeRepository<ItemManufacturer>();
                }
                return _ItemManufacturers;
            }
        }



        private IRepository<ItemOwnershipType> _ItemOwnershipTypes = null;

        public IRepository<ItemOwnershipType> ItemOwnershipTypes
        {
            get
            {
                if (_ItemOwnershipTypes == null)
                {
                    _ItemOwnershipTypes = new FakeRepository<ItemOwnershipType>();
                }
                return _ItemOwnershipTypes;
            }
        }



        private IRepository<ItemPrefferedLocation> _ItemPrefferedLocations = null;

        public IRepository<ItemPrefferedLocation> ItemPrefferedLocations
        {
            get
            {
                if (_ItemPrefferedLocations == null)
                {
                    _ItemPrefferedLocations = new FakeRepository<ItemPrefferedLocation>();
                }
                return _ItemPrefferedLocations;
            }
        }



        private IRepository<ItemReceivingUnitType> _ItemReceivingUnitTypes = null;

        public IRepository<ItemReceivingUnitType> ItemReceivingUnitTypes
        {
            get
            {
                if (_ItemReceivingUnitTypes == null)
                {
                    _ItemReceivingUnitTypes = new FakeRepository<ItemReceivingUnitType>();
                }
                return _ItemReceivingUnitTypes;
            }
        }



        private IRepository<Item> _Items = null;

        public IRepository<Item> Items
        {
            get
            {
                if (_Items == null)
                {
                    _Items = new FakeRepository<Item>();
                }
                return _Items;
            }
        }



        private IRepository<ItemSupplier> _ItemSuppliers = null;

        public IRepository<ItemSupplier> ItemSuppliers
        {
            get
            {
                if (_ItemSuppliers == null)
                {
                    _ItemSuppliers = new FakeRepository<ItemSupplier>();
                }
                return _ItemSuppliers;
            }
        }



        private IRepository<ItemSupplyCategory> _ItemSupplyCategories = null;

        public IRepository<ItemSupplyCategory> ItemSupplyCategories
        {
            get
            {
                if (_ItemSupplyCategories == null)
                {
                    _ItemSupplyCategories = new FakeRepository<ItemSupplyCategory>();
                }
                return _ItemSupplyCategories;
            }
        }



        private IRepository<ItemUnit> _ItemUnits = null;

        public IRepository<ItemUnit> ItemUnits
        {
            get
            {
                if (_ItemUnits == null)
                {
                    _ItemUnits = new FakeRepository<ItemUnit>();
                }
                return _ItemUnits;
            }
        }



        private IRepository<ItemUnitCopy> _ItemUnitCopies = null;

        public IRepository<ItemUnitCopy> ItemUnitCopies
        {
            get
            {
                if (_ItemUnitCopies == null)
                {
                    _ItemUnitCopies = new FakeRepository<ItemUnitCopy>();
                }
                return _ItemUnitCopies;
            }
        }



        //private IRepository<JobTitle> _JobTitles = null;

        //public IRepository<JobTitle> JobTitles
        //{
        //    get
        //    {
        //        if (_JobTitles == null)
        //        {
        //            _JobTitles = new FakeRepository<JobTitle>();
        //        }
        //        return _JobTitles;
        //    }
        //}



        //private IRepository<Log> _Logs = null;

        //public IRepository<Log> Logs
        //{
        //    get
        //    {
        //        if (_Logs == null)
        //        {
        //            _Logs = new FakeRepository<Log>();
        //        }
        //        return _Logs;
        //    }
        //}



        //private IRepository<LogActivity> _LogActivities = null;

        //public IRepository<LogActivity> LogActivities
        //{
        //    get
        //    {
        //        if (_LogActivities == null)
        //        {
        //            _LogActivities = new FakeRepository<LogActivity>();
        //        }
        //        return _LogActivities;
        //    }
        //}



        //private IRepository<LogError> _LogErrors = null;

        //public IRepository<LogError> LogErrors
        //{
        //    get
        //    {
        //        if (_LogErrors == null)
        //        {
        //            _LogErrors = new FakeRepository<LogError>();
        //        }
        //        return _LogErrors;
        //    }
        //}



        private IRepository<LoginLog> _LoginLogs = null;

        public IRepository<LoginLog> LoginLogs
        {
            get
            {
                if (_LoginLogs == null)
                {
                    _LoginLogs = new FakeRepository<LoginLog>();
                }
                return _LoginLogs;
            }
        }



        //private IRepository<LogProfile> _LogProfiles = null;

        //public IRepository<LogProfile> LogProfiles
        //{
        //    get
        //    {
        //        if (_LogProfiles == null)
        //        {
        //            _LogProfiles = new FakeRepository<LogProfile>();
        //        }
        //        return _LogProfiles;
        //    }
        //}



        //private IRepository<LogSession> _LogSessions = null;

        //public IRepository<LogSession> LogSessions
        //{
        //    get
        //    {
        //        if (_LogSessions == null)
        //        {
        //            _LogSessions = new FakeRepository<LogSession>();
        //        }
        //        return _LogSessions;
        //    }
        //}



        private IRepository<Manufacturer> _Manufacturers = null;

        public IRepository<Manufacturer> Manufacturers
        {
            get
            {
                if (_Manufacturers == null)
                {
                    _Manufacturers = new FakeRepository<Manufacturer>();
                }
                return _Manufacturers;
            }
        }



        //private IRepository<MenuItem> _MenuItems = null;

        //public IRepository<MenuItem> MenuItems
        //{
        //    get
        //    {
        //        if (_MenuItems == null)
        //        {
        //            _MenuItems = new FakeRepository<MenuItem>();
        //        }
        //        return _MenuItems;
        //    }
        //}



        //private IRepository<MenuItemGroup> _MenuItemGroups = null;

        //public IRepository<MenuItemGroup> MenuItemGroups
        //{
        //    get
        //    {
        //        if (_MenuItemGroups == null)
        //        {
        //            _MenuItemGroups = new FakeRepository<MenuItemGroup>();
        //        }
        //        return _MenuItemGroups;
        //    }
        //}



        //private IRepository<Operation> _Operations = null;

        //public IRepository<Operation> Operations
        //{
        //    get
        //    {
        //        if (_Operations == null)
        //        {
        //            _Operations = new FakeRepository<Operation>();
        //        }
        //        return _Operations;
        //    }
        //}



        private IRepository<Order> _Orders = null;

        public IRepository<Order> Orders
        {
            get
            {
                if (_Orders == null)
                {
                    _Orders = new FakeRepository<Order>();
                }
                return _Orders;
            }
        }



        private IRepository<OrderDetail> _OrderDetails = null;

        public IRepository<OrderDetail> OrderDetails
        {
            get
            {
                if (_OrderDetails == null)
                {
                    _OrderDetails = new FakeRepository<OrderDetail>();
                }
                return _OrderDetails;
            }
        }



        private IRepository<OrderStatu> _OrderStatus = null;

        public IRepository<OrderStatu> OrderStatus
        {
            get
            {
                if (_OrderStatus == null)
                {
                    _OrderStatus = new FakeRepository<OrderStatu>();
                }
                return _OrderStatus;
            }
        }



        private IRepository<Pallet> _Pallets = null;

        public IRepository<Pallet> Pallets
        {
            get
            {
                if (_Pallets == null)
                {
                    _Pallets = new FakeRepository<Pallet>();
                }
                return _Pallets;
            }
        }



        private IRepository<PalletLocation> _PalletLocations = null;

        public IRepository<PalletLocation> PalletLocations
        {
            get
            {
                if (_PalletLocations == null)
                {
                    _PalletLocations = new FakeRepository<PalletLocation>();
                }
                return _PalletLocations;
            }
        }



        private IRepository<PaymentType> _PaymentTypes = null;

        public IRepository<PaymentType> PaymentTypes
        {
            get
            {
                if (_PaymentTypes == null)
                {
                    _PaymentTypes = new FakeRepository<PaymentType>();
                }
                return _PaymentTypes;
            }
        }



        //private IRepository<Permission> _Permissions = null;

        //public IRepository<Permission> Permissions
        //{
        //    get
        //    {
        //        if (_Permissions == null)
        //        {
        //            _Permissions = new FakeRepository<Permission>();
        //        }
        //        return _Permissions;
        //    }
        //}



        private IRepository<PhysicalStore> _PhysicalStores = null;

        public IRepository<PhysicalStore> PhysicalStores
        {
            get
            {
                if (_PhysicalStores == null)
                {
                    _PhysicalStores = new FakeRepository<PhysicalStore>();
                }
                return _PhysicalStores;
            }
        }



        private IRepository<PhysicalStoreType> _PhysicalStoreTypes = null;

        public IRepository<PhysicalStoreType> PhysicalStoreTypes
        {
            get
            {
                if (_PhysicalStoreTypes == null)
                {
                    _PhysicalStoreTypes = new FakeRepository<PhysicalStoreType>();
                }
                return _PhysicalStoreTypes;
            }
        }



        private IRepository<PickFace> _PickFaces = null;

        public IRepository<PickFace> PickFaces
        {
            get
            {
                if (_PickFaces == null)
                {
                    _PickFaces = new FakeRepository<PickFace>();
                }
                return _PickFaces;
            }
        }



        private IRepository<PickList> _PickLists = null;

        public IRepository<PickList> PickLists
        {
            get
            {
                if (_PickLists == null)
                {
                    _PickLists = new FakeRepository<PickList>();
                }
                return _PickLists;
            }
        }



        private IRepository<PickListDetail> _PickListDetails = null;

        public IRepository<PickListDetail> PickListDetails
        {
            get
            {
                if (_PickListDetails == null)
                {
                    _PickListDetails = new FakeRepository<PickListDetail>();
                }
                return _PickListDetails;
            }
        }



        private IRepository<PO> _POes = null;

        public IRepository<PO> POes
        {
            get
            {
                if (_POes == null)
                {
                    _POes = new FakeRepository<PO>();
                }
                return _POes;
            }
        }



        private IRepository<PrintLog> _PrintLogs = null;

        public IRepository<PrintLog> PrintLogs
        {
            get
            {
                if (_PrintLogs == null)
                {
                    _PrintLogs = new FakeRepository<PrintLog>();
                }
                return _PrintLogs;
            }
        }



        private IRepository<Product> _Products = null;

        public IRepository<Product> Products
        {
            get
            {
                if (_Products == null)
                {
                    _Products = new FakeRepository<Product>();
                }
                return _Products;
            }
        }



        private IRepository<ProductReceivingUnitType> _ProductReceivingUnitTypes = null;

        public IRepository<ProductReceivingUnitType> ProductReceivingUnitTypes
        {
            get
            {
                if (_ProductReceivingUnitTypes == null)
                {
                    _ProductReceivingUnitTypes = new FakeRepository<ProductReceivingUnitType>();
                }
                return _ProductReceivingUnitTypes;
            }
        }



        private IRepository<ProductRUOwnershipType> _ProductRUOwnershipTypes = null;

        public IRepository<ProductRUOwnershipType> ProductRUOwnershipTypes
        {
            get
            {
                if (_ProductRUOwnershipTypes == null)
                {
                    _ProductRUOwnershipTypes = new FakeRepository<ProductRUOwnershipType>();
                }
                return _ProductRUOwnershipTypes;
            }
        }



        private IRepository<ProductsCategory> _ProductsCategories = null;

        public IRepository<ProductsCategory> ProductsCategories
        {
            get
            {
                if (_ProductsCategories == null)
                {
                    _ProductsCategories = new FakeRepository<ProductsCategory>();
                }
                return _ProductsCategories;
            }
        }



        private IRepository<ProgramProduct> _ProgramProducts = null;

        public IRepository<ProgramProduct> ProgramProducts
        {
            get
            {
                if (_ProgramProducts == null)
                {
                    _ProgramProducts = new FakeRepository<ProgramProduct>();
                }
                return _ProgramProducts;
            }
        }



        private IRepository<Program> _Programs = null;

        public IRepository<Program> Programs
        {
            get
            {
                if (_Programs == null)
                {
                    _Programs = new FakeRepository<Program>();
                }
                return _Programs;
            }
        }



        private IRepository<RackStatu> _RackStatus = null;

        public IRepository<RackStatu> RackStatus
        {
            get
            {
                if (_RackStatus == null)
                {
                    _RackStatus = new FakeRepository<RackStatu>();
                }
                return _RackStatus;
            }
        }



        private IRepository<Receipt> _Receipts = null;

        public IRepository<Receipt> Receipts
        {
            get
            {
                if (_Receipts == null)
                {
                    _Receipts = new FakeRepository<Receipt>();
                }
                return _Receipts;
            }
        }



        private IRepository<ReceiptConfirmationPrintout> _ReceiptConfirmationPrintouts = null;

        public IRepository<ReceiptConfirmationPrintout> ReceiptConfirmationPrintouts
        {
            get
            {
                if (_ReceiptConfirmationPrintouts == null)
                {
                    _ReceiptConfirmationPrintouts = new FakeRepository<ReceiptConfirmationPrintout>();
                }
                return _ReceiptConfirmationPrintouts;
            }
        }



        private IRepository<ReceiptConfirmationStatu> _ReceiptConfirmationStatus = null;

        public IRepository<ReceiptConfirmationStatu> ReceiptConfirmationStatus
        {
            get
            {
                if (_ReceiptConfirmationStatus == null)
                {
                    _ReceiptConfirmationStatus = new FakeRepository<ReceiptConfirmationStatu>();
                }
                return _ReceiptConfirmationStatus;
            }
        }



        private IRepository<ReceiptInvoice> _ReceiptInvoices = null;

        public IRepository<ReceiptInvoice> ReceiptInvoices
        {
            get
            {
                if (_ReceiptInvoices == null)
                {
                    _ReceiptInvoices = new FakeRepository<ReceiptInvoice>();
                }
                return _ReceiptInvoices;
            }
        }



        private IRepository<ReceiptType> _ReceiptTypes = null;

        public IRepository<ReceiptType> ReceiptTypes
        {
            get
            {
                if (_ReceiptTypes == null)
                {
                    _ReceiptTypes = new FakeRepository<ReceiptType>();
                }
                return _ReceiptTypes;
            }
        }



        private IRepository<ReceiveDoc> _ReceiveDocs = null;

        public IRepository<ReceiveDoc> ReceiveDocs
        {
            get
            {
                if (_ReceiveDocs == null)
                {
                    _ReceiveDocs = new FakeRepository<ReceiveDoc>();
                }
                return _ReceiveDocs;
            }
        }



        private IRepository<ReceiveDocConfirmation> _ReceiveDocConfirmations = null;

        public IRepository<ReceiveDocConfirmation> ReceiveDocConfirmations
        {
            get
            {
                if (_ReceiveDocConfirmations == null)
                {
                    _ReceiveDocConfirmations = new FakeRepository<ReceiveDocConfirmation>();
                }
                return _ReceiveDocConfirmations;
            }
        }



        private IRepository<ReceiveDocDeleted> _ReceiveDocDeleteds = null;

        public IRepository<ReceiveDocDeleted> ReceiveDocDeleteds
        {
            get
            {
                if (_ReceiveDocDeleteds == null)
                {
                    _ReceiveDocDeleteds = new FakeRepository<ReceiveDocDeleted>();
                }
                return _ReceiveDocDeleteds;
            }
        }



        private IRepository<ReceivePallet> _ReceivePallets = null;

        public IRepository<ReceivePallet> ReceivePallets
        {
            get
            {
                if (_ReceivePallets == null)
                {
                    _ReceivePallets = new FakeRepository<ReceivePallet>();
                }
                return _ReceivePallets;
            }
        }



        //private IRepository<ReceivePriceConfirmation> _ReceivePriceConfirmations = null;

        //public IRepository<ReceivePriceConfirmation> ReceivePriceConfirmations
        //{
        //    get
        //    {
        //        if (_ReceivePriceConfirmations == null)
        //        {
        //            _ReceivePriceConfirmations = new FakeRepository<ReceivePriceConfirmation>();
        //        }
        //        return _ReceivePriceConfirmations;
        //    }
        //}



        private IRepository<ReceivingUnit> _ReceivingUnits = null;

        public IRepository<ReceivingUnit> ReceivingUnits
        {
            get
            {
                if (_ReceivingUnits == null)
                {
                    _ReceivingUnits = new FakeRepository<ReceivingUnit>();
                }
                return _ReceivingUnits;
            }
        }



        private IRepository<ReceivingUnitType> _ReceivingUnitTypes = null;

        public IRepository<ReceivingUnitType> ReceivingUnitTypes
        {
            get
            {
                if (_ReceivingUnitTypes == null)
                {
                    _ReceivingUnitTypes = new FakeRepository<ReceivingUnitType>();
                }
                return _ReceivingUnitTypes;
            }
        }



        private IRepository<Region> _Regions = null;

        public IRepository<Region> Regions
        {
            get
            {
                if (_Regions == null)
                {
                    _Regions = new FakeRepository<Region>();
                }
                return _Regions;
            }
        }



        //private IRepository<ReportPrintout> _ReportPrintouts = null;

        //public IRepository<ReportPrintout> ReportPrintouts
        //{
        //    get
        //    {
        //        if (_ReportPrintouts == null)
        //        {
        //            _ReportPrintouts = new FakeRepository<ReportPrintout>();
        //        }
        //        return _ReportPrintouts;
        //    }
        //}



        //private IRepository<ResourceType> _ResourceTypes = null;

        //public IRepository<ResourceType> ResourceTypes
        //{
        //    get
        //    {
        //        if (_ResourceTypes == null)
        //        {
        //            _ResourceTypes = new FakeRepository<ResourceType>();
        //        }
        //        return _ResourceTypes;
        //    }
        //}



        private IRepository<Route> _Routes = null;

        public IRepository<Route> Routes
        {
            get
            {
                if (_Routes == null)
                {
                    _Routes = new FakeRepository<Route>();
                }
                return _Routes;
            }
        }



        private IRepository<RUOwnershipType> _RUOwnershipTypes = null;

        public IRepository<RUOwnershipType> RUOwnershipTypes
        {
            get
            {
                if (_RUOwnershipTypes == null)
                {
                    _RUOwnershipTypes = new FakeRepository<RUOwnershipType>();
                }
                return _RUOwnershipTypes;
            }
        }



        private IRepository<SchemaScript> _SchemaScripts = null;

        public IRepository<SchemaScript> SchemaScripts
        {
            get
            {
                if (_SchemaScripts == null)
                {
                    _SchemaScripts = new FakeRepository<SchemaScript>();
                }
                return _SchemaScripts;
            }
        }



        private IRepository<Shelf> _Shelves = null;

        public IRepository<Shelf> Shelves
        {
            get
            {
                if (_Shelves == null)
                {
                    _Shelves = new FakeRepository<Shelf>();
                }
                return _Shelves;
            }
        }



        private IRepository<ShelfRowColumn> _ShelfRowColumns = null;

        public IRepository<ShelfRowColumn> ShelfRowColumns
        {
            get
            {
                if (_ShelfRowColumns == null)
                {
                    _ShelfRowColumns = new FakeRepository<ShelfRowColumn>();
                }
                return _ShelfRowColumns;
            }
        }



        private IRepository<ShortageReason> _ShortageReasons = null;

        public IRepository<ShortageReason> ShortageReasons
        {
            get
            {
                if (_ShortageReasons == null)
                {
                    _ShortageReasons = new FakeRepository<ShortageReason>();
                }
                return _ShortageReasons;
            }
        }



        private IRepository<SoftwareSetting> _SoftwareSettings = null;

        public IRepository<SoftwareSetting> SoftwareSettings
        {
            get
            {
                if (_SoftwareSettings == null)
                {
                    _SoftwareSettings = new FakeRepository<SoftwareSetting>();
                }
                return _SoftwareSettings;
            }
        }



        private IRepository<StorageType> _StorageTypes = null;

        public IRepository<StorageType> StorageTypes
        {
            get
            {
                if (_StorageTypes == null)
                {
                    _StorageTypes = new FakeRepository<StorageType>();
                }
                return _StorageTypes;
            }
        }



        private IRepository<StoreGroup> _StoreGroups = null;

        public IRepository<StoreGroup> StoreGroups
        {
            get
            {
                if (_StoreGroups == null)
                {
                    _StoreGroups = new FakeRepository<StoreGroup>();
                }
                return _StoreGroups;
            }
        }



        private IRepository<StoreGroupDivision> _StoreGroupDivisions = null;

        public IRepository<StoreGroupDivision> StoreGroupDivisions
        {
            get
            {
                if (_StoreGroupDivisions == null)
                {
                    _StoreGroupDivisions = new FakeRepository<StoreGroupDivision>();
                }
                return _StoreGroupDivisions;
            }
        }



        private IRepository<StoreItem> _StoreItems = null;

        public IRepository<StoreItem> StoreItems
        {
            get
            {
                if (_StoreItems == null)
                {
                    _StoreItems = new FakeRepository<StoreItem>();
                }
                return _StoreItems;
            }
        }



        private IRepository<Store> _Stores = null;

        public IRepository<Store> Stores
        {
            get
            {
                if (_Stores == null)
                {
                    _Stores = new FakeRepository<Store>();
                }
                return _Stores;
            }
        }



        private IRepository<StoreType> _StoreTypes = null;

        public IRepository<StoreType> StoreTypes
        {
            get
            {
                if (_StoreTypes == null)
                {
                    _StoreTypes = new FakeRepository<StoreType>();
                }
                return _StoreTypes;
            }
        }



        private IRepository<STVLog> _STVLogs = null;

        public IRepository<STVLog> STVLogs
        {
            get
            {
                if (_STVLogs == null)
                {
                    _STVLogs = new FakeRepository<STVLog>();
                }
                return _STVLogs;
            }
        }



        private IRepository<SubCategory> _SubCategories = null;

        public IRepository<SubCategory> SubCategories
        {
            get
            {
                if (_SubCategories == null)
                {
                    _SubCategories = new FakeRepository<SubCategory>();
                }
                return _SubCategories;
            }
        }



        private IRepository<Supplier> _Suppliers = null;

        public IRepository<Supplier> Suppliers
        {
            get
            {
                if (_Suppliers == null)
                {
                    _Suppliers = new FakeRepository<Supplier>();
                }
                return _Suppliers;
            }
        }



        private IRepository<SupplyCategory> _SupplyCategories = null;

        public IRepository<SupplyCategory> SupplyCategories
        {
            get
            {
                if (_SupplyCategories == null)
                {
                    _SupplyCategories = new FakeRepository<SupplyCategory>();
                }
                return _SupplyCategories;
            }
        }



        //private IRepository<sysdiagram> _sysdiagrams = null;

        //public IRepository<sysdiagram> sysdiagrams
        //{
        //    get
        //    {
        //        if (_sysdiagrams == null)
        //        {
        //            _sysdiagrams = new FakeRepository<sysdiagram>();
        //        }
        //        return _sysdiagrams;
        //    }
        //}



        private IRepository<Transfer> _Transfers = null;

        public IRepository<Transfer> Transfers
        {
            get
            {
                if (_Transfers == null)
                {
                    _Transfers = new FakeRepository<Transfer>();
                }
                return _Transfers;
            }
        }



        private IRepository<TransferType> _TransferTypes = null;

        public IRepository<TransferType> TransferTypes
        {
            get
            {
                if (_TransferTypes == null)
                {
                    _TransferTypes = new FakeRepository<TransferType>();
                }
                return _TransferTypes;
            }
        }





        private IRepository<Unit> _Units = null;

        public IRepository<Unit> Units
        {
            get
            {
                if (_Units == null)
                {
                    _Units = new FakeRepository<Unit>();
                }
                return _Units;
            }
        }



        private IRepository<UnitofIssue> _UnitofIssues = null;

        public IRepository<UnitofIssue> UnitofIssues
        {
            get
            {
                if (_UnitofIssues == null)
                {
                    _UnitofIssues = new FakeRepository<UnitofIssue>();
                }
                return _UnitofIssues;
            }
        }



        private IRepository<User> _Users = null;

        public IRepository<User> Users
        {
            get
            {
                if (_Users == null)
                {
                    _Users = new FakeRepository<User>();
                }
                return _Users;
            }
        }



        //private IRepository<UserGroup> _UserGroups = null;

        //public IRepository<UserGroup> UserGroups
        //{
        //    get
        //    {
        //        if (_UserGroups == null)
        //        {
        //            _UserGroups = new FakeRepository<UserGroup>();
        //        }
        //        return _UserGroups;
        //    }
        //}



        private IRepository<UserPaymentType> _UserPaymentTypes = null;

        public IRepository<UserPaymentType> UserPaymentTypes
        {
            get
            {
                if (_UserPaymentTypes == null)
                {
                    _UserPaymentTypes = new FakeRepository<UserPaymentType>();
                }
                return _UserPaymentTypes;
            }
        }



        private IRepository<UserPhysicalStore> _UserPhysicalStores = null;

        public IRepository<UserPhysicalStore> UserPhysicalStores
        {
            get
            {
                if (_UserPhysicalStores == null)
                {
                    _UserPhysicalStores = new FakeRepository<UserPhysicalStore>();
                }
                return _UserPhysicalStores;
            }
        }



        private IRepository<UserStore> _UserStores = null;

        public IRepository<UserStore> UserStores
        {
            get
            {
                if (_UserStores == null)
                {
                    _UserStores = new FakeRepository<UserStore>();
                }
                return _UserStores;
            }
        }



        private IRepository<UserType> _UserTypes = null;

        public IRepository<UserType> UserTypes
        {
            get
            {
                if (_UserTypes == null)
                {
                    _UserTypes = new FakeRepository<UserType>();
                }
                return _UserTypes;
            }
        }



        private IRepository<VEN> _VENs = null;

        public IRepository<VEN> VENs
        {
            get
            {
                if (_VENs == null)
                {
                    _VENs = new FakeRepository<VEN>();
                }
                return _VENs;
            }
        }



        private IRepository<WeightedAverageLog> _WeightedAverageLogs = null;

        public IRepository<WeightedAverageLog> WeightedAverageLogs
        {
            get
            {
                if (_WeightedAverageLogs == null)
                {
                    _WeightedAverageLogs = new FakeRepository<WeightedAverageLog>();
                }
                return _WeightedAverageLogs;
            }
        }



        private IRepository<Woreda> _Woredas = null;

        public IRepository<Woreda> Woredas
        {
            get
            {
                if (_Woredas == null)
                {
                    _Woredas = new FakeRepository<Woreda>();
                }
                return _Woredas;
            }
        }



        private IRepository<YearEnd> _YearEnds = null;

        public IRepository<YearEnd> YearEnds
        {
            get
            {
                if (_YearEnds == null)
                {
                    _YearEnds = new FakeRepository<YearEnd>();
                }
                return _YearEnds;
            }
        }



        private IRepository<Zone> _Zones = null;

        public IRepository<Zone> Zones
        {
            get
            {
                if (_Zones == null)
                {
                    _Zones = new FakeRepository<Zone>();
                }
                return _Zones;
            }
        }



        private IRepository<vwAccount> _vwAccounts = null;

        public IRepository<vwAccount> vwAccounts
        {
            get
            {
                if (_vwAccounts == null)
                {
                    _vwAccounts = new FakeRepository<vwAccount>();
                }
                return _vwAccounts;
            }
        }



        private IRepository<vwAccountTree> _vwAccountTrees = null;

        public IRepository<vwAccountTree> vwAccountTrees
        {
            get
            {
                if (_vwAccountTrees == null)
                {
                    _vwAccountTrees = new FakeRepository<vwAccountTree>();
                }
                return _vwAccountTrees;
            }
        }



        private IRepository<vwAccountTreeByUser> _vwAccountTreeByUsers = null;

        public IRepository<vwAccountTreeByUser> vwAccountTreeByUsers
        {
            get
            {
                if (_vwAccountTreeByUsers == null)
                {
                    _vwAccountTreeByUsers = new FakeRepository<vwAccountTreeByUser>();
                }
                return _vwAccountTreeByUsers;
            }
        }



        private IRepository<vwGetAdjustment> _vwGetAdjustments = null;

        public IRepository<vwGetAdjustment> vwGetAdjustments
        {
            get
            {
                if (_vwGetAdjustments == null)
                {
                    _vwGetAdjustments = new FakeRepository<vwGetAdjustment>();
                }
                return _vwGetAdjustments;
            }
        }



        private IRepository<vwGetAllItem> _vwGetAllItems = null;

        public IRepository<vwGetAllItem> vwGetAllItems
        {
            get
            {
                if (_vwGetAllItems == null)
                {
                    _vwGetAllItems = new FakeRepository<vwGetAllItem>();
                }
                return _vwGetAllItems;
            }
        }



        private IRepository<vwGetCategory> _vwGetCategories = null;

        public IRepository<vwGetCategory> vwGetCategories
        {
            get
            {
                if (_vwGetCategories == null)
                {
                    _vwGetCategories = new FakeRepository<vwGetCategory>();
                }
                return _vwGetCategories;
            }
        }



        private IRepository<vwGetIssuedItemsByBatch> _vwGetIssuedItemsByBatches = null;

        public IRepository<vwGetIssuedItemsByBatch> vwGetIssuedItemsByBatches
        {
            get
            {
                if (_vwGetIssuedItemsByBatches == null)
                {
                    _vwGetIssuedItemsByBatches = new FakeRepository<vwGetIssuedItemsByBatch>();
                }
                return _vwGetIssuedItemsByBatches;
            }
        }



        private IRepository<vwGetIssue> _vwGetIssues = null;

        public IRepository<vwGetIssue> vwGetIssues
        {
            get
            {
                if (_vwGetIssues == null)
                {
                    _vwGetIssues = new FakeRepository<vwGetIssue>();
                }
                return _vwGetIssues;
            }
        }



        private IRepository<vwGetItemBalance> _vwGetItemBalances = null;

        public IRepository<vwGetItemBalance> vwGetItemBalances
        {
            get
            {
                if (_vwGetItemBalances == null)
                {
                    _vwGetItemBalances = new FakeRepository<vwGetItemBalance>();
                }
                return _vwGetItemBalances;
            }
        }



        private IRepository<vwGetItemProgram> _vwGetItemPrograms = null;

        public IRepository<vwGetItemProgram> vwGetItemPrograms
        {
            get
            {
                if (_vwGetItemPrograms == null)
                {
                    _vwGetItemPrograms = new FakeRepository<vwGetItemProgram>();
                }
                return _vwGetItemPrograms;
            }
        }



        private IRepository<vwGetItem> _vwGetItems = null;

        public IRepository<vwGetItem> vwGetItems
        {
            get
            {
                if (_vwGetItems == null)
                {
                    _vwGetItems = new FakeRepository<vwGetItem>();
                }
                return _vwGetItems;
            }
        }



        private IRepository<vwGetItemsByCategory> _vwGetItemsByCategories = null;

        public IRepository<vwGetItemsByCategory> vwGetItemsByCategories
        {
            get
            {
                if (_vwGetItemsByCategories == null)
                {
                    _vwGetItemsByCategories = new FakeRepository<vwGetItemsByCategory>();
                }
                return _vwGetItemsByCategories;
            }
        }



        //private IRepository<vwGetItemsPendingPriceChange> _vwGetItemsPendingPriceChanges = null;

        //public IRepository<vwGetItemsPendingPriceChange> vwGetItemsPendingPriceChanges
        //{
        //    get
        //    {
        //        if (_vwGetItemsPendingPriceChanges == null)
        //        {
        //            _vwGetItemsPendingPriceChanges = new FakeRepository<vwGetItemsPendingPriceChange>();
        //        }
        //        return _vwGetItemsPendingPriceChanges;
        //    }
        //}



        private IRepository<vwGetItemSupplier> _vwGetItemSuppliers = null;

        public IRepository<vwGetItemSupplier> vwGetItemSuppliers
        {
            get
            {
                if (_vwGetItemSuppliers == null)
                {
                    _vwGetItemSuppliers = new FakeRepository<vwGetItemSupplier>();
                }
                return _vwGetItemSuppliers;
            }
        }



        private IRepository<vwGetLoss> _vwGetLosses = null;

        public IRepository<vwGetLoss> vwGetLosses
        {
            get
            {
                if (_vwGetLosses == null)
                {
                    _vwGetLosses = new FakeRepository<vwGetLoss>();
                }
                return _vwGetLosses;
            }
        }



        private IRepository<vwGetReceivedItemsByBatch> _vwGetReceivedItemsByBatches = null;

        public IRepository<vwGetReceivedItemsByBatch> vwGetReceivedItemsByBatches
        {
            get
            {
                if (_vwGetReceivedItemsByBatches == null)
                {
                    _vwGetReceivedItemsByBatches = new FakeRepository<vwGetReceivedItemsByBatch>();
                }
                return _vwGetReceivedItemsByBatches;
            }
        }



        private IRepository<vwGetShelfStore> _vwGetShelfStores = null;

        public IRepository<vwGetShelfStore> vwGetShelfStores
        {
            get
            {
                if (_vwGetShelfStores == null)
                {
                    _vwGetShelfStores = new FakeRepository<vwGetShelfStore>();
                }
                return _vwGetShelfStores;
            }
        }



        private IRepository<vwGetSupply> _vwGetSupplies = null;

        public IRepository<vwGetSupply> vwGetSupplies
        {
            get
            {
                if (_vwGetSupplies == null)
                {
                    _vwGetSupplies = new FakeRepository<vwGetSupply>();
                }
                return _vwGetSupplies;
            }
        }



        private IRepository<vwGetSupplyByCategory> _vwGetSupplyByCategories = null;

        public IRepository<vwGetSupplyByCategory> vwGetSupplyByCategories
        {
            get
            {
                if (_vwGetSupplyByCategories == null)
                {
                    _vwGetSupplyByCategories = new FakeRepository<vwGetSupplyByCategory>();
                }
                return _vwGetSupplyByCategories;
            }
        }



        private IRepository<vwGetSupplyProgram> _vwGetSupplyPrograms = null;

        public IRepository<vwGetSupplyProgram> vwGetSupplyPrograms
        {
            get
            {
                if (_vwGetSupplyPrograms == null)
                {
                    _vwGetSupplyPrograms = new FakeRepository<vwGetSupplyProgram>();
                }
                return _vwGetSupplyPrograms;
            }
        }



        private IRepository<vwGetUser> _vwGetUsers = null;

        public IRepository<vwGetUser> vwGetUsers
        {
            get
            {
                if (_vwGetUsers == null)
                {
                    _vwGetUsers = new FakeRepository<vwGetUser>();
                }
                return _vwGetUsers;
            }
        }



        private IRepository<vwIssueDoc> _vwIssueDocs = null;

        public IRepository<vwIssueDoc> vwIssueDocs
        {
            get
            {
                if (_vwIssueDocs == null)
                {
                    _vwIssueDocs = new FakeRepository<vwIssueDoc>();
                }
                return _vwIssueDocs;
            }
        }



        private IRepository<vwItemOnPalletLocation> _vwItemOnPalletLocations = null;

        public IRepository<vwItemOnPalletLocation> vwItemOnPalletLocations
        {
            get
            {
                if (_vwItemOnPalletLocations == null)
                {
                    _vwItemOnPalletLocations = new FakeRepository<vwItemOnPalletLocation>();
                }
                return _vwItemOnPalletLocations;
            }
        }



        private IRepository<vwItemsReadyForDispatch> _vwItemsReadyForDispatches = null;

        public IRepository<vwItemsReadyForDispatch> vwItemsReadyForDispatches
        {
            get
            {
                if (_vwItemsReadyForDispatches == null)
                {
                    _vwItemsReadyForDispatches = new FakeRepository<vwItemsReadyForDispatch>();
                }
                return _vwItemsReadyForDispatches;
            }
        }



        private IRepository<vwPallet> _vwPallets = null;

        public IRepository<vwPallet> vwPallets
        {
            get
            {
                if (_vwPallets == null)
                {
                    _vwPallets = new FakeRepository<vwPallet>();
                }
                return _vwPallets;
            }
        }



        private IRepository<vwPalletLocation> _vwPalletLocations = null;

        public IRepository<vwPalletLocation> vwPalletLocations
        {
            get
            {
                if (_vwPalletLocations == null)
                {
                    _vwPalletLocations = new FakeRepository<vwPalletLocation>();
                }
                return _vwPalletLocations;
            }
        }



        private IRepository<vwPhysicalStoreForItem> _vwPhysicalStoreForItems = null;

        public IRepository<vwPhysicalStoreForItem> vwPhysicalStoreForItems
        {
            get
            {
                if (_vwPhysicalStoreForItems == null)
                {
                    _vwPhysicalStoreForItems = new FakeRepository<vwPhysicalStoreForItem>();
                }
                return _vwPhysicalStoreForItems;
            }
        }



        private IRepository<vwReceiptPallet> _vwReceiptPallets = null;

        public IRepository<vwReceiptPallet> vwReceiptPallets
        {
            get
            {
                if (_vwReceiptPallets == null)
                {
                    _vwReceiptPallets = new FakeRepository<vwReceiptPallet>();
                }
                return _vwReceiptPallets;
            }
        }



        private IRepository<vwReceivedDoc> _vwReceivedDocs = null;

        public IRepository<vwReceivedDoc> vwReceivedDocs
        {
            get
            {
                if (_vwReceivedDocs == null)
                {
                    _vwReceivedDocs = new FakeRepository<vwReceivedDoc>();
                }
                return _vwReceivedDocs;
            }
        }



        private IRepository<vwTree> _vwTrees = null;

        public IRepository<vwTree> vwTrees
        {
            get
            {
                if (_vwTrees == null)
                {
                    _vwTrees = new FakeRepository<vwTree>();
                }
                return _vwTrees;
            }
        }


        private IRepository<Concrete.Models.Type> _Types = null;

        public IRepository<Concrete.Models.Type> Types
        {
            get
            {
                if (_Types == null)
                {
                    _Types = new FakeRepository<Concrete.Models.Type>();
                }
                return _Types;
            }
        }


        public IRepository<JournalLite> JournalLites
        {
            get { throw new NotImplementedException(); }
        }

        public IRepository<Ledger> LedgerLites
        {
            get { throw new NotImplementedException(); }
        }
    }
}
