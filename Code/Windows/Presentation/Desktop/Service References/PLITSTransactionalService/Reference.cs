//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCMIS.Desktop.PLITSTransactionalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderCompletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.OrderDetail> OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderVerifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportingPeriodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestApprovedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestCompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestVerifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubmittedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubmittedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyChainUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderApprovedBy {
            get {
                return this.OrderApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderApprovedByField, value) != true)) {
                    this.OrderApprovedByField = value;
                    this.RaisePropertyChanged("OrderApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderCompletedBy {
            get {
                return this.OrderCompletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCompletedByField, value) != true)) {
                    this.OrderCompletedByField = value;
                    this.RaisePropertyChanged("OrderCompletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.OrderDetail> OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((this.OrderStatusField.Equals(value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderTypeId {
            get {
                return this.OrderTypeIdField;
            }
            set {
                if ((this.OrderTypeIdField.Equals(value) != true)) {
                    this.OrderTypeIdField = value;
                    this.RaisePropertyChanged("OrderTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderVerifiedBy {
            get {
                return this.OrderVerifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderVerifiedByField, value) != true)) {
                    this.OrderVerifiedByField = value;
                    this.RaisePropertyChanged("OrderVerifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportingPeriodId {
            get {
                return this.ReportingPeriodIdField;
            }
            set {
                if ((this.ReportingPeriodIdField.Equals(value) != true)) {
                    this.ReportingPeriodIdField = value;
                    this.RaisePropertyChanged("ReportingPeriodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestApprovedDate {
            get {
                return this.RequestApprovedDateField;
            }
            set {
                if ((this.RequestApprovedDateField.Equals(value) != true)) {
                    this.RequestApprovedDateField = value;
                    this.RaisePropertyChanged("RequestApprovedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestCompletedDate {
            get {
                return this.RequestCompletedDateField;
            }
            set {
                if ((this.RequestCompletedDateField.Equals(value) != true)) {
                    this.RequestCompletedDateField = value;
                    this.RaisePropertyChanged("RequestCompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestVerifiedDate {
            get {
                return this.RequestVerifiedDateField;
            }
            set {
                if ((this.RequestVerifiedDateField.Equals(value) != true)) {
                    this.RequestVerifiedDateField = value;
                    this.RaisePropertyChanged("RequestVerifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedBy {
            get {
                return this.SubmittedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedByField, value) != true)) {
                    this.SubmittedByField = value;
                    this.RaisePropertyChanged("SubmittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubmittedDate {
            get {
                return this.SubmittedDateField;
            }
            set {
                if ((this.SubmittedDateField.Equals(value) != true)) {
                    this.SubmittedDateField = value;
                    this.RaisePropertyChanged("SubmittedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplyChainUnitId {
            get {
                return this.SupplyChainUnitIdField;
            }
            set {
                if ((this.SupplyChainUnitIdField.Equals(value) != true)) {
                    this.SupplyChainUnitIdField = value;
                    this.RaisePropertyChanged("SupplyChainUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetail", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class OrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Adjustment> AdjustmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BeginningBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.DaysOutOfStock> DaysOutOfStocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndingBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Expiry> ExpiriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LossAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmaceuticalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityIssuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityOrderedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityReceivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Adjustment> Adjustments {
            get {
                return this.AdjustmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjustmentsField, value) != true)) {
                    this.AdjustmentsField = value;
                    this.RaisePropertyChanged("Adjustments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BeginningBalance {
            get {
                return this.BeginningBalanceField;
            }
            set {
                if ((this.BeginningBalanceField.Equals(value) != true)) {
                    this.BeginningBalanceField = value;
                    this.RaisePropertyChanged("BeginningBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.DaysOutOfStock> DaysOutOfStocks {
            get {
                return this.DaysOutOfStocksField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysOutOfStocksField, value) != true)) {
                    this.DaysOutOfStocksField = value;
                    this.RaisePropertyChanged("DaysOutOfStocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndingBalance {
            get {
                return this.EndingBalanceField;
            }
            set {
                if ((this.EndingBalanceField.Equals(value) != true)) {
                    this.EndingBalanceField = value;
                    this.RaisePropertyChanged("EndingBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Expiry> Expiries {
            get {
                return this.ExpiriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiriesField, value) != true)) {
                    this.ExpiriesField = value;
                    this.RaisePropertyChanged("Expiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LossAdjustment {
            get {
                return this.LossAdjustmentField;
            }
            set {
                if ((this.LossAdjustmentField.Equals(value) != true)) {
                    this.LossAdjustmentField = value;
                    this.RaisePropertyChanged("LossAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmaceuticalId {
            get {
                return this.PharmaceuticalIdField;
            }
            set {
                if ((this.PharmaceuticalIdField.Equals(value) != true)) {
                    this.PharmaceuticalIdField = value;
                    this.RaisePropertyChanged("PharmaceuticalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityIssued {
            get {
                return this.QuantityIssuedField;
            }
            set {
                if ((this.QuantityIssuedField.Equals(value) != true)) {
                    this.QuantityIssuedField = value;
                    this.RaisePropertyChanged("QuantityIssued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityOrdered {
            get {
                return this.QuantityOrderedField;
            }
            set {
                if ((this.QuantityOrderedField.Equals(value) != true)) {
                    this.QuantityOrderedField = value;
                    this.RaisePropertyChanged("QuantityOrdered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuantityReceived {
            get {
                return this.QuantityReceivedField;
            }
            set {
                if ((this.QuantityReceivedField.Equals(value) != true)) {
                    this.QuantityReceivedField = value;
                    this.RaisePropertyChanged("QuantityReceived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adjustment", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Adjustment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonId {
            get {
                return this.ReasonIdField;
            }
            set {
                if ((this.ReasonIdField.Equals(value) != true)) {
                    this.ReasonIdField = value;
                    this.RaisePropertyChanged("ReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DaysOutOfStock", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class DaysOutOfStock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDaysOutOfStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockOutReasonIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDaysOutOfStock {
            get {
                return this.NumberOfDaysOutOfStockField;
            }
            set {
                if ((this.NumberOfDaysOutOfStockField.Equals(value) != true)) {
                    this.NumberOfDaysOutOfStockField = value;
                    this.RaisePropertyChanged("NumberOfDaysOutOfStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockOutReasonId {
            get {
                return this.StockOutReasonIdField;
            }
            set {
                if ((this.StockOutReasonIdField.Equals(value) != true)) {
                    this.StockOutReasonIdField = value;
                    this.RaisePropertyChanged("StockOutReasonId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expiry", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Expiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNo {
            get {
                return this.BatchNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNoField, value) != true)) {
                    this.BatchNoField = value;
                    this.RaisePropertyChanged("BatchNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitResult", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class SubmitResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderIsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> ValidationMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderIsValid {
            get {
                return this.OrderIsValidField;
            }
            set {
                if ((this.OrderIsValidField.Equals(value) != true)) {
                    this.OrderIsValidField = value;
                    this.RaisePropertyChanged("OrderIsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> ValidationMessages {
            get {
                return this.ValidationMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationMessagesField, value) != true)) {
                    this.ValidationMessagesField = value;
                    this.RaisePropertyChanged("ValidationMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationMessage", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class ValidationMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class PLITSFaultException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCMIS.Desktop.PLITSTransactionalService.PLITSFaultCode errorcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCMIS.Desktop.PLITSTransactionalService.PLITSFaultCode errorcode {
            get {
                return this.errorcodeField;
            }
            set {
                if ((this.errorcodeField.Equals(value) != true)) {
                    this.errorcodeField = value;
                    this.RaisePropertyChanged("errorcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PLITSFaultCode", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    public enum PLITSFaultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPERATION_ERROR = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SECURITY_ERROR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INCORRECT_PARAMETER = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovedOrder", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class ApprovedOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrderDetail> ApprovedOrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplyChainUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrderDetail> ApprovedOrderDetails {
            get {
                return this.ApprovedOrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedOrderDetailsField, value) != true)) {
                    this.ApprovedOrderDetailsField = value;
                    this.RaisePropertyChanged("ApprovedOrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplyChainUnitId {
            get {
                return this.SupplyChainUnitIdField;
            }
            set {
                if ((this.SupplyChainUnitIdField.Equals(value) != true)) {
                    this.SupplyChainUnitIdField = value;
                    this.RaisePropertyChanged("SupplyChainUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApprovedOrderDetail", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class ApprovedOrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApprovedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmaceuticalIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApprovedQty {
            get {
                return this.ApprovedQtyField;
            }
            set {
                if ((this.ApprovedQtyField.Equals(value) != true)) {
                    this.ApprovedQtyField = value;
                    this.RaisePropertyChanged("ApprovedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmaceuticalId {
            get {
                return this.PharmaceuticalIdField;
            }
            set {
                if ((this.PharmaceuticalIdField.Equals(value) != true)) {
                    this.PharmaceuticalIdField = value;
                    this.RaisePropertyChanged("PharmaceuticalId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Issuance", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
    [System.SerializableAttribute()]
    public partial class Issuance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApprovedOrderDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateIssuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityIssuedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApprovedOrderDetailId {
            get {
                return this.ApprovedOrderDetailIdField;
            }
            set {
                if ((this.ApprovedOrderDetailIdField.Equals(value) != true)) {
                    this.ApprovedOrderDetailIdField = value;
                    this.RaisePropertyChanged("ApprovedOrderDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateIssued {
            get {
                return this.DateIssuedField;
            }
            set {
                if ((this.DateIssuedField.Equals(value) != true)) {
                    this.DateIssuedField = value;
                    this.RaisePropertyChanged("DateIssued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityIssued {
            get {
                return this.QuantityIssuedField;
            }
            set {
                if ((this.QuantityIssuedField.Equals(value) != true)) {
                    this.QuantityIssuedField = value;
                    this.RaisePropertyChanged("QuantityIssued");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PLITSTransactionalService.IServiceOrder")]
    public interface IServiceOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitFacilityOrders", ReplyAction="http://tempuri.org/IServiceOrder/SubmitFacilityOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitFacilityOrdersPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> SubmitFacilityOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/SubmitFacilityOrders", ReplyAction="http://tempuri.org/IServiceOrder/SubmitFacilityOrdersResponse")]
        System.IAsyncResult BeginSubmitFacilityOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> EndSubmitFacilityOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCount", ReplyAction="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCountPLITSFaultExceptio" +
            "nFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        int GetFacilityApprovedOrdersCount(int BranchId, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCount", ReplyAction="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersCountResponse")]
        System.IAsyncResult BeginGetFacilityApprovedOrdersCount(int BranchId, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        int EndGetFacilityApprovedOrdersCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersPLITSFaultExceptionFaul" +
            "t", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> GetFacilityApprovedOrders(int BranchId, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetFacilityApprovedOrdersResponse")]
        System.IAsyncResult BeginGetFacilityApprovedOrders(int BranchId, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> EndGetFacilityApprovedOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrdersPLITSFaultException" +
            "Fault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        void ConfirmFacilityApprovedOrders(int BranchId, System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/ConfirmFacilityApprovedOrdersResponse")]
        System.IAsyncResult BeginConfirmFacilityApprovedOrders(int BranchId, System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        void EndConfirmFacilityApprovedOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitFacilityIssues", ReplyAction="http://tempuri.org/IServiceOrder/SubmitFacilityIssuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitFacilityIssuesPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> SubmitFacilityIssues(int BranchId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/SubmitFacilityIssues", ReplyAction="http://tempuri.org/IServiceOrder/SubmitFacilityIssuesResponse")]
        System.IAsyncResult BeginSubmitFacilityIssues(int BranchId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> EndSubmitFacilityIssues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitBranchOrders", ReplyAction="http://tempuri.org/IServiceOrder/SubmitBranchOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitBranchOrdersPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> SubmitBranchOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/SubmitBranchOrders", ReplyAction="http://tempuri.org/IServiceOrder/SubmitBranchOrdersResponse")]
        System.IAsyncResult BeginSubmitBranchOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> EndSubmitBranchOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCount", ReplyAction="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCountPLITSFaultExceptionF" +
            "ault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        int GetBranchApprovedOrdersCount(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCount", ReplyAction="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersCountResponse")]
        System.IAsyncResult BeginGetBranchApprovedOrdersCount(string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        int EndGetBranchApprovedOrdersCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> GetBranchApprovedOrders(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/GetBranchApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetBranchApprovedOrdersResponse")]
        System.IAsyncResult BeginGetBranchApprovedOrders(string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> EndGetBranchApprovedOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrdersPLITSFaultExceptionFa" +
            "ult", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        void ConfirmBranchApprovedOrders(System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrders", ReplyAction="http://tempuri.org/IServiceOrder/ConfirmBranchApprovedOrdersResponse")]
        System.IAsyncResult BeginConfirmBranchApprovedOrders(System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        void EndConfirmBranchApprovedOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/SubmitBranchIssues", ReplyAction="http://tempuri.org/IServiceOrder/SubmitBranchIssuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HCMIS.Desktop.PLITSTransactionalService.PLITSFaultException), Action="http://tempuri.org/IServiceOrder/SubmitBranchIssuesPLITSFaultExceptionFault", Name="PLITSFaultException", Namespace="http://schemas.datacontract.org/2004/07/PLITS.Entities")]
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> SubmitBranchIssues(System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceOrder/SubmitBranchIssues", ReplyAction="http://tempuri.org/IServiceOrder/SubmitBranchIssuesResponse")]
        System.IAsyncResult BeginSubmitBranchIssues(System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> EndSubmitBranchIssues(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOrderChannel : HCMIS.Desktop.PLITSTransactionalService.IServiceOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitFacilityOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitFacilityOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFacilityApprovedOrdersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFacilityApprovedOrdersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFacilityApprovedOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFacilityApprovedOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitFacilityIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitFacilityIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitBranchOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitBranchOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBranchApprovedOrdersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBranchApprovedOrdersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBranchApprovedOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBranchApprovedOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitBranchIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitBranchIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOrderClient : System.ServiceModel.ClientBase<HCMIS.Desktop.PLITSTransactionalService.IServiceOrder>, HCMIS.Desktop.PLITSTransactionalService.IServiceOrder {
        
        private BeginOperationDelegate onBeginSubmitFacilityOrdersDelegate;
        
        private EndOperationDelegate onEndSubmitFacilityOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitFacilityOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFacilityApprovedOrdersCountDelegate;
        
        private EndOperationDelegate onEndGetFacilityApprovedOrdersCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetFacilityApprovedOrdersCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFacilityApprovedOrdersDelegate;
        
        private EndOperationDelegate onEndGetFacilityApprovedOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onGetFacilityApprovedOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginConfirmFacilityApprovedOrdersDelegate;
        
        private EndOperationDelegate onEndConfirmFacilityApprovedOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onConfirmFacilityApprovedOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitFacilityIssuesDelegate;
        
        private EndOperationDelegate onEndSubmitFacilityIssuesDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitFacilityIssuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitBranchOrdersDelegate;
        
        private EndOperationDelegate onEndSubmitBranchOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitBranchOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBranchApprovedOrdersCountDelegate;
        
        private EndOperationDelegate onEndGetBranchApprovedOrdersCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetBranchApprovedOrdersCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBranchApprovedOrdersDelegate;
        
        private EndOperationDelegate onEndGetBranchApprovedOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onGetBranchApprovedOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginConfirmBranchApprovedOrdersDelegate;
        
        private EndOperationDelegate onEndConfirmBranchApprovedOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onConfirmBranchApprovedOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitBranchIssuesDelegate;
        
        private EndOperationDelegate onEndSubmitBranchIssuesDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitBranchIssuesCompletedDelegate;
        
        public ServiceOrderClient() {
        }
        
        public ServiceOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SubmitFacilityOrdersCompletedEventArgs> SubmitFacilityOrdersCompleted;
        
        public event System.EventHandler<GetFacilityApprovedOrdersCountCompletedEventArgs> GetFacilityApprovedOrdersCountCompleted;
        
        public event System.EventHandler<GetFacilityApprovedOrdersCompletedEventArgs> GetFacilityApprovedOrdersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ConfirmFacilityApprovedOrdersCompleted;
        
        public event System.EventHandler<SubmitFacilityIssuesCompletedEventArgs> SubmitFacilityIssuesCompleted;
        
        public event System.EventHandler<SubmitBranchOrdersCompletedEventArgs> SubmitBranchOrdersCompleted;
        
        public event System.EventHandler<GetBranchApprovedOrdersCountCompletedEventArgs> GetBranchApprovedOrdersCountCompleted;
        
        public event System.EventHandler<GetBranchApprovedOrdersCompletedEventArgs> GetBranchApprovedOrdersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ConfirmBranchApprovedOrdersCompleted;
        
        public event System.EventHandler<SubmitBranchIssuesCompletedEventArgs> SubmitBranchIssuesCompleted;
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> SubmitFacilityOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password) {
            return base.Channel.SubmitFacilityOrders(SupplyChainUnitId, Orders, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitFacilityOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitFacilityOrders(SupplyChainUnitId, Orders, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> EndSubmitFacilityOrders(System.IAsyncResult result) {
            return base.Channel.EndSubmitFacilityOrders(result);
        }
        
        private System.IAsyncResult OnBeginSubmitFacilityOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SupplyChainUnitId = ((int)(inValues[0]));
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders = ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order>)(inValues[1]));
            string UserName = ((string)(inValues[2]));
            string Password = ((string)(inValues[3]));
            return this.BeginSubmitFacilityOrders(SupplyChainUnitId, Orders, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndSubmitFacilityOrders(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> retVal = this.EndSubmitFacilityOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitFacilityOrdersCompleted(object state) {
            if ((this.SubmitFacilityOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitFacilityOrdersCompleted(this, new SubmitFacilityOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitFacilityOrdersAsync(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password) {
            this.SubmitFacilityOrdersAsync(SupplyChainUnitId, Orders, UserName, Password, null);
        }
        
        public void SubmitFacilityOrdersAsync(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password, object userState) {
            if ((this.onBeginSubmitFacilityOrdersDelegate == null)) {
                this.onBeginSubmitFacilityOrdersDelegate = new BeginOperationDelegate(this.OnBeginSubmitFacilityOrders);
            }
            if ((this.onEndSubmitFacilityOrdersDelegate == null)) {
                this.onEndSubmitFacilityOrdersDelegate = new EndOperationDelegate(this.OnEndSubmitFacilityOrders);
            }
            if ((this.onSubmitFacilityOrdersCompletedDelegate == null)) {
                this.onSubmitFacilityOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitFacilityOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitFacilityOrdersDelegate, new object[] {
                        SupplyChainUnitId,
                        Orders,
                        UserName,
                        Password}, this.onEndSubmitFacilityOrdersDelegate, this.onSubmitFacilityOrdersCompletedDelegate, userState);
        }
        
        public int GetFacilityApprovedOrdersCount(int BranchId, string UserName, string Password) {
            return base.Channel.GetFacilityApprovedOrdersCount(BranchId, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFacilityApprovedOrdersCount(int BranchId, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFacilityApprovedOrdersCount(BranchId, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetFacilityApprovedOrdersCount(System.IAsyncResult result) {
            return base.Channel.EndGetFacilityApprovedOrdersCount(result);
        }
        
        private System.IAsyncResult OnBeginGetFacilityApprovedOrdersCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BranchId = ((int)(inValues[0]));
            string UserName = ((string)(inValues[1]));
            string Password = ((string)(inValues[2]));
            return this.BeginGetFacilityApprovedOrdersCount(BranchId, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndGetFacilityApprovedOrdersCount(System.IAsyncResult result) {
            int retVal = this.EndGetFacilityApprovedOrdersCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFacilityApprovedOrdersCountCompleted(object state) {
            if ((this.GetFacilityApprovedOrdersCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFacilityApprovedOrdersCountCompleted(this, new GetFacilityApprovedOrdersCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFacilityApprovedOrdersCountAsync(int BranchId, string UserName, string Password) {
            this.GetFacilityApprovedOrdersCountAsync(BranchId, UserName, Password, null);
        }
        
        public void GetFacilityApprovedOrdersCountAsync(int BranchId, string UserName, string Password, object userState) {
            if ((this.onBeginGetFacilityApprovedOrdersCountDelegate == null)) {
                this.onBeginGetFacilityApprovedOrdersCountDelegate = new BeginOperationDelegate(this.OnBeginGetFacilityApprovedOrdersCount);
            }
            if ((this.onEndGetFacilityApprovedOrdersCountDelegate == null)) {
                this.onEndGetFacilityApprovedOrdersCountDelegate = new EndOperationDelegate(this.OnEndGetFacilityApprovedOrdersCount);
            }
            if ((this.onGetFacilityApprovedOrdersCountCompletedDelegate == null)) {
                this.onGetFacilityApprovedOrdersCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFacilityApprovedOrdersCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetFacilityApprovedOrdersCountDelegate, new object[] {
                        BranchId,
                        UserName,
                        Password}, this.onEndGetFacilityApprovedOrdersCountDelegate, this.onGetFacilityApprovedOrdersCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> GetFacilityApprovedOrders(int BranchId, string UserName, string Password) {
            return base.Channel.GetFacilityApprovedOrders(BranchId, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFacilityApprovedOrders(int BranchId, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFacilityApprovedOrders(BranchId, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> EndGetFacilityApprovedOrders(System.IAsyncResult result) {
            return base.Channel.EndGetFacilityApprovedOrders(result);
        }
        
        private System.IAsyncResult OnBeginGetFacilityApprovedOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BranchId = ((int)(inValues[0]));
            string UserName = ((string)(inValues[1]));
            string Password = ((string)(inValues[2]));
            return this.BeginGetFacilityApprovedOrders(BranchId, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndGetFacilityApprovedOrders(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> retVal = this.EndGetFacilityApprovedOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFacilityApprovedOrdersCompleted(object state) {
            if ((this.GetFacilityApprovedOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFacilityApprovedOrdersCompleted(this, new GetFacilityApprovedOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFacilityApprovedOrdersAsync(int BranchId, string UserName, string Password) {
            this.GetFacilityApprovedOrdersAsync(BranchId, UserName, Password, null);
        }
        
        public void GetFacilityApprovedOrdersAsync(int BranchId, string UserName, string Password, object userState) {
            if ((this.onBeginGetFacilityApprovedOrdersDelegate == null)) {
                this.onBeginGetFacilityApprovedOrdersDelegate = new BeginOperationDelegate(this.OnBeginGetFacilityApprovedOrders);
            }
            if ((this.onEndGetFacilityApprovedOrdersDelegate == null)) {
                this.onEndGetFacilityApprovedOrdersDelegate = new EndOperationDelegate(this.OnEndGetFacilityApprovedOrders);
            }
            if ((this.onGetFacilityApprovedOrdersCompletedDelegate == null)) {
                this.onGetFacilityApprovedOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFacilityApprovedOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginGetFacilityApprovedOrdersDelegate, new object[] {
                        BranchId,
                        UserName,
                        Password}, this.onEndGetFacilityApprovedOrdersDelegate, this.onGetFacilityApprovedOrdersCompletedDelegate, userState);
        }
        
        public void ConfirmFacilityApprovedOrders(int BranchId, System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password) {
            base.Channel.ConfirmFacilityApprovedOrders(BranchId, Orderids, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConfirmFacilityApprovedOrders(int BranchId, System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConfirmFacilityApprovedOrders(BranchId, Orderids, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndConfirmFacilityApprovedOrders(System.IAsyncResult result) {
            base.Channel.EndConfirmFacilityApprovedOrders(result);
        }
        
        private System.IAsyncResult OnBeginConfirmFacilityApprovedOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BranchId = ((int)(inValues[0]));
            System.Collections.ObjectModel.Collection<int> Orderids = ((System.Collections.ObjectModel.Collection<int>)(inValues[1]));
            string UserName = ((string)(inValues[2]));
            string Password = ((string)(inValues[3]));
            return this.BeginConfirmFacilityApprovedOrders(BranchId, Orderids, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndConfirmFacilityApprovedOrders(System.IAsyncResult result) {
            this.EndConfirmFacilityApprovedOrders(result);
            return null;
        }
        
        private void OnConfirmFacilityApprovedOrdersCompleted(object state) {
            if ((this.ConfirmFacilityApprovedOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConfirmFacilityApprovedOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConfirmFacilityApprovedOrdersAsync(int BranchId, System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password) {
            this.ConfirmFacilityApprovedOrdersAsync(BranchId, Orderids, UserName, Password, null);
        }
        
        public void ConfirmFacilityApprovedOrdersAsync(int BranchId, System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password, object userState) {
            if ((this.onBeginConfirmFacilityApprovedOrdersDelegate == null)) {
                this.onBeginConfirmFacilityApprovedOrdersDelegate = new BeginOperationDelegate(this.OnBeginConfirmFacilityApprovedOrders);
            }
            if ((this.onEndConfirmFacilityApprovedOrdersDelegate == null)) {
                this.onEndConfirmFacilityApprovedOrdersDelegate = new EndOperationDelegate(this.OnEndConfirmFacilityApprovedOrders);
            }
            if ((this.onConfirmFacilityApprovedOrdersCompletedDelegate == null)) {
                this.onConfirmFacilityApprovedOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConfirmFacilityApprovedOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginConfirmFacilityApprovedOrdersDelegate, new object[] {
                        BranchId,
                        Orderids,
                        UserName,
                        Password}, this.onEndConfirmFacilityApprovedOrdersDelegate, this.onConfirmFacilityApprovedOrdersCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> SubmitFacilityIssues(int BranchId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password) {
            return base.Channel.SubmitFacilityIssues(BranchId, Issuances, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitFacilityIssues(int BranchId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitFacilityIssues(BranchId, Issuances, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> EndSubmitFacilityIssues(System.IAsyncResult result) {
            return base.Channel.EndSubmitFacilityIssues(result);
        }
        
        private System.IAsyncResult OnBeginSubmitFacilityIssues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int BranchId = ((int)(inValues[0]));
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances = ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance>)(inValues[1]));
            string UserName = ((string)(inValues[2]));
            string Password = ((string)(inValues[3]));
            return this.BeginSubmitFacilityIssues(BranchId, Issuances, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndSubmitFacilityIssues(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> retVal = this.EndSubmitFacilityIssues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitFacilityIssuesCompleted(object state) {
            if ((this.SubmitFacilityIssuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitFacilityIssuesCompleted(this, new SubmitFacilityIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitFacilityIssuesAsync(int BranchId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password) {
            this.SubmitFacilityIssuesAsync(BranchId, Issuances, UserName, Password, null);
        }
        
        public void SubmitFacilityIssuesAsync(int BranchId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password, object userState) {
            if ((this.onBeginSubmitFacilityIssuesDelegate == null)) {
                this.onBeginSubmitFacilityIssuesDelegate = new BeginOperationDelegate(this.OnBeginSubmitFacilityIssues);
            }
            if ((this.onEndSubmitFacilityIssuesDelegate == null)) {
                this.onEndSubmitFacilityIssuesDelegate = new EndOperationDelegate(this.OnEndSubmitFacilityIssues);
            }
            if ((this.onSubmitFacilityIssuesCompletedDelegate == null)) {
                this.onSubmitFacilityIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitFacilityIssuesCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitFacilityIssuesDelegate, new object[] {
                        BranchId,
                        Issuances,
                        UserName,
                        Password}, this.onEndSubmitFacilityIssuesDelegate, this.onSubmitFacilityIssuesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> SubmitBranchOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password) {
            return base.Channel.SubmitBranchOrders(SupplyChainUnitId, Orders, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitBranchOrders(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitBranchOrders(SupplyChainUnitId, Orders, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> EndSubmitBranchOrders(System.IAsyncResult result) {
            return base.Channel.EndSubmitBranchOrders(result);
        }
        
        private System.IAsyncResult OnBeginSubmitBranchOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SupplyChainUnitId = ((int)(inValues[0]));
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders = ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order>)(inValues[1]));
            string UserName = ((string)(inValues[2]));
            string Password = ((string)(inValues[3]));
            return this.BeginSubmitBranchOrders(SupplyChainUnitId, Orders, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndSubmitBranchOrders(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.SubmitResult> retVal = this.EndSubmitBranchOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitBranchOrdersCompleted(object state) {
            if ((this.SubmitBranchOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitBranchOrdersCompleted(this, new SubmitBranchOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitBranchOrdersAsync(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password) {
            this.SubmitBranchOrdersAsync(SupplyChainUnitId, Orders, UserName, Password, null);
        }
        
        public void SubmitBranchOrdersAsync(int SupplyChainUnitId, System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Order> Orders, string UserName, string Password, object userState) {
            if ((this.onBeginSubmitBranchOrdersDelegate == null)) {
                this.onBeginSubmitBranchOrdersDelegate = new BeginOperationDelegate(this.OnBeginSubmitBranchOrders);
            }
            if ((this.onEndSubmitBranchOrdersDelegate == null)) {
                this.onEndSubmitBranchOrdersDelegate = new EndOperationDelegate(this.OnEndSubmitBranchOrders);
            }
            if ((this.onSubmitBranchOrdersCompletedDelegate == null)) {
                this.onSubmitBranchOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitBranchOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitBranchOrdersDelegate, new object[] {
                        SupplyChainUnitId,
                        Orders,
                        UserName,
                        Password}, this.onEndSubmitBranchOrdersDelegate, this.onSubmitBranchOrdersCompletedDelegate, userState);
        }
        
        public int GetBranchApprovedOrdersCount(string UserName, string Password) {
            return base.Channel.GetBranchApprovedOrdersCount(UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBranchApprovedOrdersCount(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBranchApprovedOrdersCount(UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetBranchApprovedOrdersCount(System.IAsyncResult result) {
            return base.Channel.EndGetBranchApprovedOrdersCount(result);
        }
        
        private System.IAsyncResult OnBeginGetBranchApprovedOrdersCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            return this.BeginGetBranchApprovedOrdersCount(UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndGetBranchApprovedOrdersCount(System.IAsyncResult result) {
            int retVal = this.EndGetBranchApprovedOrdersCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBranchApprovedOrdersCountCompleted(object state) {
            if ((this.GetBranchApprovedOrdersCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBranchApprovedOrdersCountCompleted(this, new GetBranchApprovedOrdersCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBranchApprovedOrdersCountAsync(string UserName, string Password) {
            this.GetBranchApprovedOrdersCountAsync(UserName, Password, null);
        }
        
        public void GetBranchApprovedOrdersCountAsync(string UserName, string Password, object userState) {
            if ((this.onBeginGetBranchApprovedOrdersCountDelegate == null)) {
                this.onBeginGetBranchApprovedOrdersCountDelegate = new BeginOperationDelegate(this.OnBeginGetBranchApprovedOrdersCount);
            }
            if ((this.onEndGetBranchApprovedOrdersCountDelegate == null)) {
                this.onEndGetBranchApprovedOrdersCountDelegate = new EndOperationDelegate(this.OnEndGetBranchApprovedOrdersCount);
            }
            if ((this.onGetBranchApprovedOrdersCountCompletedDelegate == null)) {
                this.onGetBranchApprovedOrdersCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBranchApprovedOrdersCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetBranchApprovedOrdersCountDelegate, new object[] {
                        UserName,
                        Password}, this.onEndGetBranchApprovedOrdersCountDelegate, this.onGetBranchApprovedOrdersCountCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> GetBranchApprovedOrders(string UserName, string Password) {
            return base.Channel.GetBranchApprovedOrders(UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBranchApprovedOrders(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBranchApprovedOrders(UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> EndGetBranchApprovedOrders(System.IAsyncResult result) {
            return base.Channel.EndGetBranchApprovedOrders(result);
        }
        
        private System.IAsyncResult OnBeginGetBranchApprovedOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserName = ((string)(inValues[0]));
            string Password = ((string)(inValues[1]));
            return this.BeginGetBranchApprovedOrders(UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndGetBranchApprovedOrders(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ApprovedOrder> retVal = this.EndGetBranchApprovedOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBranchApprovedOrdersCompleted(object state) {
            if ((this.GetBranchApprovedOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBranchApprovedOrdersCompleted(this, new GetBranchApprovedOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBranchApprovedOrdersAsync(string UserName, string Password) {
            this.GetBranchApprovedOrdersAsync(UserName, Password, null);
        }
        
        public void GetBranchApprovedOrdersAsync(string UserName, string Password, object userState) {
            if ((this.onBeginGetBranchApprovedOrdersDelegate == null)) {
                this.onBeginGetBranchApprovedOrdersDelegate = new BeginOperationDelegate(this.OnBeginGetBranchApprovedOrders);
            }
            if ((this.onEndGetBranchApprovedOrdersDelegate == null)) {
                this.onEndGetBranchApprovedOrdersDelegate = new EndOperationDelegate(this.OnEndGetBranchApprovedOrders);
            }
            if ((this.onGetBranchApprovedOrdersCompletedDelegate == null)) {
                this.onGetBranchApprovedOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBranchApprovedOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginGetBranchApprovedOrdersDelegate, new object[] {
                        UserName,
                        Password}, this.onEndGetBranchApprovedOrdersDelegate, this.onGetBranchApprovedOrdersCompletedDelegate, userState);
        }
        
        public void ConfirmBranchApprovedOrders(System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password) {
            base.Channel.ConfirmBranchApprovedOrders(Orderids, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConfirmBranchApprovedOrders(System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConfirmBranchApprovedOrders(Orderids, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndConfirmBranchApprovedOrders(System.IAsyncResult result) {
            base.Channel.EndConfirmBranchApprovedOrders(result);
        }
        
        private System.IAsyncResult OnBeginConfirmBranchApprovedOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.Collection<int> Orderids = ((System.Collections.ObjectModel.Collection<int>)(inValues[0]));
            string UserName = ((string)(inValues[1]));
            string Password = ((string)(inValues[2]));
            return this.BeginConfirmBranchApprovedOrders(Orderids, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndConfirmBranchApprovedOrders(System.IAsyncResult result) {
            this.EndConfirmBranchApprovedOrders(result);
            return null;
        }
        
        private void OnConfirmBranchApprovedOrdersCompleted(object state) {
            if ((this.ConfirmBranchApprovedOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConfirmBranchApprovedOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConfirmBranchApprovedOrdersAsync(System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password) {
            this.ConfirmBranchApprovedOrdersAsync(Orderids, UserName, Password, null);
        }
        
        public void ConfirmBranchApprovedOrdersAsync(System.Collections.ObjectModel.Collection<int> Orderids, string UserName, string Password, object userState) {
            if ((this.onBeginConfirmBranchApprovedOrdersDelegate == null)) {
                this.onBeginConfirmBranchApprovedOrdersDelegate = new BeginOperationDelegate(this.OnBeginConfirmBranchApprovedOrders);
            }
            if ((this.onEndConfirmBranchApprovedOrdersDelegate == null)) {
                this.onEndConfirmBranchApprovedOrdersDelegate = new EndOperationDelegate(this.OnEndConfirmBranchApprovedOrders);
            }
            if ((this.onConfirmBranchApprovedOrdersCompletedDelegate == null)) {
                this.onConfirmBranchApprovedOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConfirmBranchApprovedOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginConfirmBranchApprovedOrdersDelegate, new object[] {
                        Orderids,
                        UserName,
                        Password}, this.onEndConfirmBranchApprovedOrdersDelegate, this.onConfirmBranchApprovedOrdersCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> SubmitBranchIssues(System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password) {
            return base.Channel.SubmitBranchIssues(Issuances, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitBranchIssues(System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitBranchIssues(Issuances, UserName, Password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> EndSubmitBranchIssues(System.IAsyncResult result) {
            return base.Channel.EndSubmitBranchIssues(result);
        }
        
        private System.IAsyncResult OnBeginSubmitBranchIssues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances = ((System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance>)(inValues[0]));
            string UserName = ((string)(inValues[1]));
            string Password = ((string)(inValues[2]));
            return this.BeginSubmitBranchIssues(Issuances, UserName, Password, callback, asyncState);
        }
        
        private object[] OnEndSubmitBranchIssues(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.ValidationMessage> retVal = this.EndSubmitBranchIssues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitBranchIssuesCompleted(object state) {
            if ((this.SubmitBranchIssuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitBranchIssuesCompleted(this, new SubmitBranchIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitBranchIssuesAsync(System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password) {
            this.SubmitBranchIssuesAsync(Issuances, UserName, Password, null);
        }
        
        public void SubmitBranchIssuesAsync(System.Collections.ObjectModel.Collection<HCMIS.Desktop.PLITSTransactionalService.Issuance> Issuances, string UserName, string Password, object userState) {
            if ((this.onBeginSubmitBranchIssuesDelegate == null)) {
                this.onBeginSubmitBranchIssuesDelegate = new BeginOperationDelegate(this.OnBeginSubmitBranchIssues);
            }
            if ((this.onEndSubmitBranchIssuesDelegate == null)) {
                this.onEndSubmitBranchIssuesDelegate = new EndOperationDelegate(this.OnEndSubmitBranchIssues);
            }
            if ((this.onSubmitBranchIssuesCompletedDelegate == null)) {
                this.onSubmitBranchIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitBranchIssuesCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitBranchIssuesDelegate, new object[] {
                        Issuances,
                        UserName,
                        Password}, this.onEndSubmitBranchIssuesDelegate, this.onSubmitBranchIssuesCompletedDelegate, userState);
        }
    }
}
