
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Collections.Generic;
using BLL;

namespace Proxy
{
    public class ReceiptInvoice
    {

        #region Properties

        private int? _ID;
        public int? ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }

        private int? _InvoiceTypeID;
        public int? InvoiceTypeID
        {
            get
            {
                return _InvoiceTypeID;
            }
            set
            {
                _InvoiceTypeID = value;
            }
        }

        private string _STVOrInvoiceNo;
        public string STVOrInvoiceNo
        {
            get
            {
                return _STVOrInvoiceNo;
            }
            set
            {
                _STVOrInvoiceNo = value;
            }
        }

        private string _WayBillNo;
        public string WayBillNo
        {
            get
            {
                return _WayBillNo;
            }
            set
            {
                _WayBillNo = value;
            }
        }

        private string _TransitTransferNo;
        public string TransitTransferNo
        {
            get
            {
                return _TransitTransferNo;
            }
            set
            {
                _TransitTransferNo = value;
            }
        }

        private string _InsurancePolicyNo;
        public string InsurancePolicyNo
        {
            get
            {
                return _InsurancePolicyNo;
            }
            set
            {
                _InsurancePolicyNo = value;
            }
        }

        private DateTime? _DateOfEntry;
        public DateTime? DateOfEntry
        {
            get
            {
                return _DateOfEntry;
            }
            set
            {
                _DateOfEntry = value;
            }
        }

        private int? _ReceiptInvoiceType;
        public int? ReceiptInvoiceType
        {
            get
            {
                return _ReceiptInvoiceType;
            }
            set
            {
                _ReceiptInvoiceType = value;
            }
        }

        private double? _TotalValue;
        public double? TotalValue
        {
            get
            {
                return _TotalValue;
            }
            set
            {
                _TotalValue = value;
            }
        }

        private double? _Insurance;
        public double? Insurance
        {
            get
            {
                return _Insurance;
            }
            set
            {
                _Insurance = value;
            }
        }

        private double? _AirFreight;
        public double? AirFreight
        {
            get
            {
                return _AirFreight;
            }
            set
            {
                _AirFreight = value;
            }
        }

        private double? _SeaFreight;
        public double? SeaFreight
        {
            get
            {
                return _SeaFreight;
            }
            set
            {
                _SeaFreight = value;
            }
        }

        private double? _InlandFreight;
        public double? InlandFreight
        {
            get
            {
                return _InlandFreight;
            }
            set
            {
                _InlandFreight = value;
            }
        }

        private double? _NBE;
        public double? NBE
        {
            get
            {
                return _NBE;
            }
            set
            {
                _NBE = value;
            }
        }

        private double? _CBE;
        public double? CBE
        {
            get
            {
                return _CBE;
            }
            set
            {
                _CBE = value;
            }
        }

        private double? _CustomDutyTax;
        public double? CustomDutyTax
        {
            get
            {
                return _CustomDutyTax;
            }
            set
            {
                _CustomDutyTax = value;
            }
        }

        private double? _TransitServiceCharge;
        public double? TransitServiceCharge
        {
            get
            {
                return _TransitServiceCharge;
            }
            set
            {
                _TransitServiceCharge = value;
            }
        }

        private double? _Provision;
        public double? Provision
        {
            get
            {
                return _Provision;
            }
            set
            {
                _Provision = value;
            }
        }

        private double? _OtherExpense;
        public double? OtherExpense
        {
            get
            {
                return _OtherExpense;
            }
            set
            {
                _OtherExpense = value;
            }
        }

        private double? _ExchangeRate;
        public double? ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                _ExchangeRate = value;
            }
        }

        private int? _SavedByUserID;
        public int? SavedByUserID
        {
            get
            {
                return _SavedByUserID;
            }
            set
            {
                _SavedByUserID = value;
            }
        }

        private int? _POID;
        public int? POID
        {
            get
            {
                return _POID;
            }
            set
            {
                _POID = value;
            }
        }

        private string _Currency;
        public string Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                _Currency = value;
            }
        }

        private int? _LCID;
        public int? LCID
        {
            get
            {
                return _LCID;
            }
            set
            {
                _LCID = value;
            }
        }


        #endregion

        #region Web Service Getters

        public static List<ReceiptInvoice> GetAll()
        {
            BLL.ReceiptInvoice v = new BLL.ReceiptInvoice();
            v.LoadAll();
            return ToList(v);
        }


        public static List<ReceiptInvoice> GetUpdatesAfter(long? lastVersion, DateTime? lastUpdateTime)
        {
            BLL.ReceiptInvoice v = new BLL.ReceiptInvoice();
            if (lastVersion.HasValue && lastVersion.Value != 0)
            {
                v.LoadUpdatesAfter(lastVersion.Value);
            }
            else if (lastUpdateTime.HasValue)
            {
                v.LoadUpdatesAfterByTime(lastUpdateTime.Value);
            }
            else
            {
                v.LoadAll();
            }
            return ToList(v);
        }

        public static List<int> GetDeletedIDsAfter(long LastVersion)
        {
            BLL.ReceiptInvoice v = new BLL.ReceiptInvoice();
            v.LoadDeletedIDs(LastVersion);
            List<int> list = new List<int>();
            while (!v.EOF)
            {
                list.Add((int)v.GetColumn("ID"));
                v.MoveNext();
            }
            return list;
        }

        #endregion



        #region Utilities

        public static List<ReceiptInvoice> ToList(BLL.ReceiptInvoice v)
        {
            List<ReceiptInvoice> list = new List<ReceiptInvoice>();
            while (!v.EOF)
            {
                ReceiptInvoice t = new ReceiptInvoice();
                if (!v.IsColumnNull("ID"))
                    t.ID = v.ID;
                if (!v.IsColumnNull("InvoiceTypeID"))
                    t.InvoiceTypeID = v.InvoiceTypeID;
                if (!v.IsColumnNull("STVOrInvoiceNo"))
                    t.STVOrInvoiceNo = v.STVOrInvoiceNo;
                if (!v.IsColumnNull("WayBillNo"))
                    t.WayBillNo = v.WayBillNo;
                if (!v.IsColumnNull("TransitTransferNo"))
                    t.TransitTransferNo = v.TransitTransferNo;
                if (!v.IsColumnNull("InsurancePolicyNo"))
                    t.InsurancePolicyNo = v.InsurancePolicyNo;
                if (!v.IsColumnNull("DateOfEntry"))
                    t.DateOfEntry = v.DateOfEntry;
                if (!v.IsColumnNull("ReceiptInvoiceType"))
                    t.ReceiptInvoiceType = v.ReceiptInvoiceType;
                if (!v.IsColumnNull("TotalValue"))
                    t.TotalValue = v.TotalValue;
                if (!v.IsColumnNull("Insurance"))
                    t.Insurance = v.Insurance;
                if (!v.IsColumnNull("AirFreight"))
                    t.AirFreight = v.AirFreight;
                if (!v.IsColumnNull("SeaFreight"))
                    t.SeaFreight = v.SeaFreight;
                if (!v.IsColumnNull("InlandFreight"))
                    t.InlandFreight = v.InlandFreight;
                if (!v.IsColumnNull("NBE"))
                    t.NBE = v.NBE;
                if (!v.IsColumnNull("CBE"))
                    t.CBE = v.CBE;
                if (!v.IsColumnNull("CustomDutyTax"))
                    t.CustomDutyTax = v.CustomDutyTax;
                if (!v.IsColumnNull("TransitServiceCharge"))
                    t.TransitServiceCharge = v.TransitServiceCharge;
                if (!v.IsColumnNull("Provision"))
                    t.Provision = v.Provision;
                if (!v.IsColumnNull("OtherExpense"))
                    t.OtherExpense = v.OtherExpense;
                if (!v.IsColumnNull("ExchangeRate"))
                    t.ExchangeRate = v.ExchangeRate;
                if (!v.IsColumnNull("SavedByUserID"))
                    t.SavedByUserID = v.SavedByUserID;
                if (!v.IsColumnNull("POID"))
                    t.POID = v.POID;
                if (!v.IsColumnNull("Currency"))
                    t.Currency = v.Currency;
                if (!v.IsColumnNull("LCID"))
                    t.LCID = v.LCID;

                list.Add(t);
                v.MoveNext();
            }
            return list;
        }

        #endregion


        #region Web service Saving

        public static void SaveList(List<HCMIS.Desktop.STVSyncService.STVList> list, int userID)
        {
            BLL.ReceiptInvoice bv = new BLL.ReceiptInvoice();
            foreach (HCMIS.Desktop.STVSyncService.STVList v in list)
            {
                // try to load by primary key
                bv.LoadBySTVNoAndAccountType(v.STVNo, v.AccountID);

                // if the entry doesn't exist, create it
                if (bv.RowCount == 0)
                {
                    BLL.PO po = new BLL.PO();
                    po.AddNew();
                    if (v.AccountID.HasValue)
                        po.StoreID = v.AccountID.Value;
                    po.SupplierID = BLL.Supplier.CONSTANTS.HOME_OFFICE;
                    if (v.HubID.HasValue)
                        po.PONumber = v.HubID.Value + "-" + v.STVNo;
                    po.Save();

                    bv.AddNew();
                    bv.STVOrInvoiceNo = v.STVNo.ToString();
                    bv.InvoiceTypeID = BLL.ReceiptInvoiceType.InvoiceType.STV;
                    bv.DateOfEntry = DateTimeHelper.ServerDateTime;
                    bv.POID = po.ID;
                    bv.SavedByUserID = userID;
                }
                // populate the contents of v on the to the database list
                bv.TotalValue = v.InvoiceTotalValue;
                bv.Insurance = v.Insurance;
                bv.SavedByUserID = userID;
                bv.Save();
            }


        }

        public static void DeleteList(List<int> list)
        {
            BLL.ReceiptInvoice bv = new BLL.ReceiptInvoice();
            foreach (int v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v);
                // if the entry doesn't exist, create it
                if (bv.RowCount > 0)
                {
                    bv.MarkAsDeleted();
                    bv.Save();
                }
                // populate the contents of v on the to the database list

            }


        }


        #endregion
    }
}
