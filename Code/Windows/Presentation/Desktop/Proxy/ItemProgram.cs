
// Generated by MyGeneration Version # (1.3.0.9)

using System;
using System.Collections.Generic;

namespace Proxy
{
    public class ItemProgram
    {

        #region Properties

        private int? _ID;
        public int? ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }

        private int? _ProgramID;
        public int? ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                _ProgramID = value;
            }
        }

        private int? _ItemID;
        public int? ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                _ItemID = value;
            }
        }

        private bool? _IsDeleted;
        public bool? IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                _IsDeleted = value;
            }
        }

        private DateTime? _UpdateTime;
        public DateTime? UpdateTime
        {
            get
            {
                return _UpdateTime;
            }
            set
            {
                _UpdateTime = value;
            }
        }


        #endregion

        //#region Web Service Getters

        //    public static List<ItemProgram> GetAll()
        //    {
        //        BLL.ItemProgram v = new BLL.ItemProgram();
        //        v.LoadAll();
        //        return ToList(v);
        //    }

        //    public static List<ItemProgram> GetUpdatesAfter(long? lastVersion,DateTime? lastUpdateTime)
        //    {
        //        BLL.ItemProgram v = new BLL.ItemProgram();
        //        if(lastVersion.HasValue && lastVersion.Value != 0)
        //        {
        //            v.LoadUpdatesAfter( lastVersion.Value );    
        //        }else if(lastUpdateTime.HasValue)
        //        {
        //            v.LoadUpdatesAfterByTime(lastUpdateTime.Value);
        //        }else
        //        {
        //            v.LoadAll();
        //        }
        //        return ToList(v);
        //    }

        //    public static List<int> GetDeletedIDsAfter(long LastVersion)
        //    {
        //         BLL.ItemProgram v = new BLL.ItemProgram();
        //        v.LoadDeletedIDs(LastVersion);
        //        List<int> list = new List<int>();
        //        while (!v.EOF)
        //        {
        //            list.Add((int)v.GetColumn("ID"));
        //            v.MoveNext();
        //        }
        //        return list;
        //    }

        //#endregion



        #region Utilities



        #endregion


        #region Web service Saving

        public static void SaveList(List<HCMIS.Desktop.DirectoryServices.ItemProgram> list)
        {
            BLL.ProgramProduct bv = new BLL.ProgramProduct();
            foreach (HCMIS.Desktop.DirectoryServices.ItemProgram v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v.ID);

                // if the entry doesn't exist, create it
                if (bv.RowCount == 0)
                {
                    bv.AddNew();
                }
                // populate the contents of v on the to the database list
                //if(v.ID.HasValue)
                bv.ID = v.ID;
                if (v.ProgramID.HasValue)
                    bv.ProgramID = v.ProgramID.Value;
                if (v.ItemID.HasValue)
                    bv.ItemID = v.ItemID.Value;
                //if( v.IsDeleted.HasValue )
                //     bv.IsDeleted = v.IsDeleted.Value;
                //if( v.UpdateTime.HasValue )
                //     bv.UpdateTime = v.UpdateTime.Value;

                bv.Save();
            }


        }

        public static void DeleteList(List<int> list)
        {
            BLL.ProgramProduct bv = new BLL.ProgramProduct();
            foreach (int v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v);
                // if the entry doesn't exist, create it
                if (bv.RowCount > 0)
                {
                    bv.MarkAsDeleted();
                    bv.Save();
                }
                // populate the contents of v on the to the database list

            }


        }


        #endregion
    }
}
