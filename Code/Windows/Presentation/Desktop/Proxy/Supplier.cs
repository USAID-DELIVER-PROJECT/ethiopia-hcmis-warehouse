
// Generated by MyGeneration Version # (1.3.0.9)

using System;
using System.Collections.Generic;

namespace Proxy
{
	public class Supplier 
	{
	
	#region Properties
	
		private  int? _ID;
		public  int? ID
	    {
			get
	        {
				return _ID;
			}
			set
	        {
				_ID = value;
			}
		}

		private  string _CompanyName;
		public  string CompanyName
	    {
			get
	        {
				return _CompanyName;
			}
			set
	        {
				_CompanyName = value;
			}
		}

		private  string _Address;
		public  string Address
	    {
			get
	        {
				return _Address;
			}
			set
	        {
				_Address = value;
			}
		}

		private  string _Telephone;
		public  string Telephone
	    {
			get
	        {
				return _Telephone;
			}
			set
	        {
				_Telephone = value;
			}
		}

		private  string _ContactPerson;
		public  string ContactPerson
	    {
			get
	        {
				return _ContactPerson;
			}
			set
	        {
				_ContactPerson = value;
			}
		}

		private  string _Mobile;
		public  string Mobile
	    {
			get
	        {
				return _Mobile;
			}
			set
	        {
				_Mobile = value;
			}
		}

		private  string _CompanyInfo;
		public  string CompanyInfo
	    {
			get
	        {
				return _CompanyInfo;
			}
			set
	        {
				_CompanyInfo = value;
			}
		}

		private  bool? _IsActive;
		public  bool? IsActive
	    {
			get
	        {
				return _IsActive;
			}
			set
	        {
				_IsActive = value;
			}
		}

		private  string _Email;
		public  string Email
	    {
			get
	        {
				return _Email;
			}
			set
	        {
				_Email = value;
			}
		}

		private  bool? _IsDeleted;
		public  bool? IsDeleted
	    {
			get
	        {
				return _IsDeleted;
			}
			set
	        {
				_IsDeleted = value;
			}
		}

		private  DateTime? _UpdateTime;
		public  DateTime? UpdateTime
	    {
			get
	        {
				return _UpdateTime;
			}
			set
	        {
				_UpdateTime = value;
			}
		}


	#endregion
	
	#region Web Service Getters
		
		public static List<Supplier> GetAll()
        {
            BLL.Supplier v = new BLL.Supplier();
            v.LoadAll();
			return ToList(v);
        }
		
		public static List<Supplier> GetUpdatesAfter(long? lastVersion,DateTime? lastUpdateTime)
        {
            BLL.Supplier v = new BLL.Supplier();
            if(lastVersion.HasValue && lastVersion.Value != 0)
            {
                v.LoadUpdatesAfter(Convert.ToInt32( lastVersion.Value ) );    
            }else if(lastUpdateTime.HasValue)
            {
               // v.LoadUpdatesAfterByTime(lastUpdateTime.Value);
            }else
            {
                v.LoadAll();
            }
			return ToList(v);
        }
		
        public static List<int> GetDeletedIDsAfter(long LastVersion)
        {
             BLL.Supplier v = new BLL.Supplier();
            //v.LoadDeletedIDs(LastVersion);
            List<int> list = new List<int>();
            while (!v.EOF)
            {
                list.Add((int)v.GetColumn("ID"));
                v.MoveNext();
            }
            return list;
        }
		
	#endregion
	
	
	
	#region Utilities
	
		public static List<Supplier> ToList(BLL.Supplier v){
			List<Supplier> list = new List<Supplier>();
            while (!v.EOF)
            {
                Supplier t = new Supplier();
              if(!v.IsColumnNull("ID"))
				    t.ID = v.ID;
              if(!v.IsColumnNull("CompanyName"))
				    t.CompanyName = v.CompanyName;
              if(!v.IsColumnNull("Address"))
				    t.Address = v.Address;
              if(!v.IsColumnNull("Telephone"))
				    t.Telephone = v.Telephone;
              if(!v.IsColumnNull("ContactPerson"))
				    t.ContactPerson = v.ContactPerson;
              if(!v.IsColumnNull("Mobile"))
				    t.Mobile = v.Mobile;
              if(!v.IsColumnNull("CompanyInfo"))
				    t.CompanyInfo = v.CompanyInfo;
              if(!v.IsColumnNull("IsActive"))
				    t.IsActive = v.IsActive;
              if(!v.IsColumnNull("Email"))
				    t.Email = v.Email;
              //if(!v.IsColumnNull("IsDeleted"))
              //      t.IsDeleted = v.IsDeleted;
              //if(!v.IsColumnNull("UpdateTime"))
              //      t.UpdateTime = v.UpdateTime;

				list.Add(t);
                v.MoveNext();
            }
            return list;
		}
	
		#endregion
		
		
		#region Web service Saving

        public static void SaveList(List<HCMIS.Desktop.DirectoryServices.Supplier> list)
        {
            BLL.Supplier bv = new BLL.Supplier();
            foreach (HCMIS.Desktop.DirectoryServices.Supplier v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v.ID.Value);

                // if the entry doesn't exist, create it
                if (bv.RowCount == 0)
                {
                    bv.AddNew();
                }
                // populate the contents of v on the to the database list
              if( v.ID.HasValue )
				   bv.ID = v.ID.Value;
              if( v.CompanyName != "" && v.CompanyName != null )
				   bv.CompanyName = v.CompanyName;
              if( v.Address != "" && v.Address != null )
				   bv.Address = v.Address;
              if( v.Telephone != "" && v.Telephone != null )
				   bv.Telephone = v.Telephone;
              if( v.ContactPerson != "" && v.ContactPerson != null )
				   bv.ContactPerson = v.ContactPerson;
              if( v.Mobile != "" && v.Mobile != null )
				   bv.Mobile = v.Mobile;
              if( v.CompanyInfo != "" && v.CompanyInfo != null )
				   bv.CompanyInfo = v.CompanyInfo;
              if( v.IsActive.HasValue )
				   bv.IsActive = v.IsActive.Value;
              if( v.Email != "" && v.Email != null )
				   bv.Email = v.Email;
              //if( v.IsDeleted.HasValue )
              //     bv.IsDeleted = v.IsDeleted.Value;
              //if( v.UpdateTime.HasValue )
              //     bv.UpdateTime = v.UpdateTime.Value;

                bv.Save();
            }


        }
	
	public static void DeleteList(List<int> list)
        {
            BLL.Supplier bv = new BLL.Supplier();
            foreach (int v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v);
                // if the entry doesn't exist, create it
                if (bv.RowCount > 0)
                {
                    bv.MarkAsDeleted();
					bv.Save();
                }
                // populate the contents of v on the to the database list

            }


        }
	
	
	#endregion
	}
}
