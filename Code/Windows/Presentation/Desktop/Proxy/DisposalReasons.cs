
// Generated by MyGeneration Version # (1.3.0.9)

using System;
using System.Collections.Generic;

namespace Proxy
{
	public class DisposalReasons 
	{
	
	#region Properties
	
		private  int? _ID;
		public  int? ID
	    {
			get
	        {
				return _ID;
			}
			set
	        {
				_ID = value;
			}
		}

		private  string _Reason;
		public  string Reason
	    {
			get
	        {
				return _Reason;
			}
			set
	        {
				_Reason = value;
			}
		}

		private  bool? _IsLoss;
		public  bool? IsLoss
	    {
			get
	        {
				return _IsLoss;
			}
			set
	        {
				_IsLoss = value;
			}
		}

		private  bool? _IsDeleted;
		public  bool? IsDeleted
	    {
			get
	        {
				return _IsDeleted;
			}
			set
	        {
				_IsDeleted = value;
			}
		}

		private  DateTime? _UpdateTime;
		public  DateTime? UpdateTime
	    {
			get
	        {
				return _UpdateTime;
			}
			set
	        {
				_UpdateTime = value;
			}
		}


	#endregion
	
	#region Web Service Getters
		
		public static List<DisposalReasons> GetAll()
        {
            BLL.DisposalReasons v = new BLL.DisposalReasons();
            v.LoadAll();
			return ToList(v);
        }
		

	#endregion
	
	
	
	#region Utilities
	
		public static List<DisposalReasons> ToList(BLL.DisposalReasons v){
			List<DisposalReasons> list = new List<DisposalReasons>();
            while (!v.EOF)
            {
                DisposalReasons t = new DisposalReasons();
              if(!v.IsColumnNull("ID"))
				    t.ID = v.ID;
              if(!v.IsColumnNull("Reason"))
				    t.Reason = v.Reason;
            
				list.Add(t);
                v.MoveNext();
            }
            return list;
		}
	
		#endregion
		
		
		#region Web service Saving
	
		public static void SaveList(List<DisposalReasons> list)
        {
            BLL.DisposalReasons bv = new BLL.DisposalReasons();
            foreach (DisposalReasons v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v.ID.Value);

                // if the entry doesn't exist, create it
                if (bv.RowCount == 0)
                {
                    bv.AddNew();
                }
                // populate the contents of v on the to the database list
              if( v.ID.HasValue )
				   bv.ID = v.ID.Value;
              if( v.Reason != "" && v.Reason != null )
				   bv.Reason = v.Reason;
            
                bv.Save();
            }


        }
	
	public static void DeleteList(List<int> list)
        {
            BLL.DisposalReasons bv = new BLL.DisposalReasons();
            foreach (int v in list)
            {
                // try to load by primary key
                bv.LoadByPrimaryKey(v);
                // if the entry doesn't exist, create it
                if (bv.RowCount > 0)
                {
                    bv.MarkAsDeleted();
					bv.Save();
                }
                // populate the contents of v on the to the database list

            }


        }
	
	
	#endregion
	}
}
