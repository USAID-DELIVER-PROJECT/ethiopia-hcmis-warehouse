//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCMIS.Desktop.Helpers {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Icons {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Icons() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HCMIS.Desktop.Helpers.Icons", typeof(Icons).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Edit {
            get {
                object obj = ResourceManager.GetObject("Edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Edit2 {
            get {
                object obj = ResourceManager.GetObject("Edit2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HCMIS.
        /// </summary>
        internal static string IssueDetailByFacility_LoadReport_HCMIS {
            get {
                return ResourceManager.GetString("IssueDetailByFacility_LoadReport_HCMIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap New {
            get {
                object obj = ResourceManager.GetObject("New", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap tick {
            get {
                object obj = ResourceManager.GetObject("tick", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap toggle {
            get {
                object obj = ResourceManager.GetObject("toggle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap toggle_expand {
            get {
                object obj = ResourceManager.GetObject("toggle_expand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You Can&apos;t Select this PalletLocation! There is no Damaged Quantity for this Item.
        /// </summary>
        internal static string YearEndProcess_gridLocationRelatedInventoryView_ShownEditor_You_Can_t_Select_PalletLocation__There_is_no_Damaged_Quantity_for_this_Item {
            get {
                return ResourceManager.GetString("YearEndProcess_gridLocationRelatedInventoryView_ShownEditor_You_Can_t_Select_Pall" +
                        "etLocation__There_is_no_Damaged_Quantity_for_this_Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DamagedPalletLocation Can not be left empty!.
        /// </summary>
        internal static string YearEndProcess_ValidateBeforeCommit_DamagedPalletLocation_Can_not_be_left_empty_ {
            get {
                return ResourceManager.GetString("YearEndProcess_ValidateBeforeCommit_DamagedPalletLocation_Can_not_be_left_empty_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal PalletLocation Can not be left empty!.
        /// </summary>
        internal static string YearEndProcess_ValidateBeforeCommit_Normal_PalletLocation_Can_not_be_left_empty_ {
            get {
                return ResourceManager.GetString("YearEndProcess_ValidateBeforeCommit_Normal_PalletLocation_Can_not_be_left_empty_", resourceCulture);
            }
        }
    }
}
